{"version":3,"file":"index.es.js","sources":["../src/helpers.js","../src/hooks/useFiles.js","../src/hooks/useSnackbar.js","../src/hooks/useWidth.js","../src/hooks/useColumns.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\r\n  if (file.type.split('/')[0] === 'image') {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function convertBytesToMbsOrKbs(filesize) {\r\n  let size = '';\r\n  // I know, not technically correct...\r\n  if (filesize >= 1000000) {\r\n    size = `${filesize / 1000000} megabytes`;\r\n  } else if (filesize >= 1000) {\r\n    size = `${filesize / 1000} kilobytes`;\r\n  } else {\r\n    size = `${filesize} bytes`;\r\n  }\r\n  return size;\r\n}\r\n\r\nexport async function createFileFromUrl(url) {\r\n  const response = await fetch(url);\r\n  const data = await response.blob();\r\n  const metadata = { type: data.type };\r\n  const filename = url.replace(/\\?.+/, '').split('/').pop();\r\n  return new File([data], filename, metadata);\r\n}\r\n\r\nexport function readFile(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      resolve(event?.target?.result);\r\n    };\r\n    reader.onerror = (event) => {\r\n      reader.abort();\r\n      reject(event);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  });\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { createFileFromUrl, readFile } from '../helpers';\r\n\r\n/**\r\n * holds files in its state and provides some handler methods to add and remove from that state\r\n */\r\nconst useFiles = ({\r\n  onChange,\r\n  clearOnUnmount,\r\n  initialFiles,\r\n  filesLimit,\r\n  onDelete,\r\n}) => {\r\n  const [fileObjects, setFileObjects] = useState([]);\r\n\r\n  const loadInitialFiles = useCallback(async () => {\r\n    try {\r\n      const fileObjs = await Promise.all(\r\n        initialFiles.map(async (initialFile) => {\r\n          let file;\r\n          if (typeof initialFile === 'string') {\r\n            file = await createFileFromUrl(initialFile);\r\n          } else {\r\n            file = initialFile;\r\n          }\r\n          const data = await readFile(file);\r\n\r\n          return {\r\n            file,\r\n            data,\r\n          };\r\n        }),\r\n      );\r\n\r\n      setFileObjects((prev) => [...prev, ...fileObjs]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [initialFiles]);\r\n\r\n  const handleAddFiles = useCallback(\r\n    (newFileObjects) => {\r\n      // Update component state\r\n      setFileObjects((prev) => {\r\n        if (filesLimit <= 1) {\r\n          return [newFileObjects[0]];\r\n        }\r\n\r\n        return [...prev, ...newFileObjects];\r\n      });\r\n    },\r\n    [filesLimit],\r\n  );\r\n\r\n  const handleDeleteFile = useCallback(\r\n    (removedFileObj, removedFileObjIdx) => {\r\n      // Calculate remaining fileObjects array\r\n      const remainingFileObjs = fileObjects.filter((fileObject, i) => {\r\n        return i !== removedFileObjIdx;\r\n      });\r\n\r\n      // Notify removed file\r\n      if (onDelete) {\r\n        onDelete(removedFileObj.file);\r\n      }\r\n\r\n      // Update local state\r\n      setFileObjects(remainingFileObjs);\r\n    },\r\n    [onDelete, fileObjects],\r\n  );\r\n\r\n  const handleResetFiles = () => setFileObjects([]);\r\n\r\n  // When the fileObjects change, fire the onChange method if it's defined\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange(fileObjects.map((fileObject) => fileObject.file));\r\n    }\r\n  }, [fileObjects, onChange]);\r\n\r\n  // Initialize the files when the hook is loaded\r\n  useEffect(() => {\r\n    loadInitialFiles();\r\n\r\n    return () => {\r\n      if (clearOnUnmount) {\r\n        setFileObjects([]);\r\n      }\r\n    };\r\n  }, [clearOnUnmount, loadInitialFiles]);\r\n\r\n  return {\r\n    handleAddFiles,\r\n    handleDeleteFile,\r\n    handleResetFiles,\r\n    fileObjects,\r\n  };\r\n};\r\n\r\nexport default useFiles;\r\n","import { useCallback, useState } from 'react';\r\n\r\n/**\r\n * Holds state required to utilize the snackbar and provides handlers to send messages via the snackbar\r\n */\r\nconst useSnackbar = (onAlert) => {\r\n  const [state, setState] = useState({\r\n    open: false,\r\n    message: '',\r\n    variant: 'success',\r\n  });\r\n\r\n  const sendMessage = useCallback(\r\n    (message, variant) => {\r\n      setState({\r\n        open: true,\r\n        message,\r\n        variant,\r\n      });\r\n\r\n      if (onAlert) {\r\n        onAlert(message, variant);\r\n      }\r\n    },\r\n    [onAlert],\r\n  );\r\n\r\n  const handleCloseSnackbar = useCallback(() => {\r\n    setState((prev) => ({ ...prev, open: false }));\r\n  }, []);\r\n\r\n  return {\r\n    handleCloseSnackbar,\r\n    sendMessage,\r\n    snackbarMessage: state.message,\r\n    snackbarVariant: state.variant,\r\n    snackbarOpen: state.open,\r\n  };\r\n};\r\n\r\nexport default useSnackbar;\r\n","import { useTheme } from '@material-ui/core/styles';\r\nimport matchMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n/**\r\n * Returns xs,sm,md,lg or xl depending on the screenSize\r\n * @see https://material-ui.com/components/use-media-query/#migrating-from-withwidth\r\n */\r\nconst useWidth = () => {\r\n  const theme = useTheme();\r\n  const keys = [...theme.breakpoints.keys].reverse();\r\n  return (\r\n    keys.reduce((output, key) => {\r\n      const matches = matchMediaQuery(theme.breakpoints.up(key));\r\n      return !output && matches ? key : output;\r\n    }, null) || 'xs'\r\n  );\r\n};\r\n\r\nexport default useWidth;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport useWidth from './useWidth';\r\n\r\n/**\r\n * Calculates the number of columns to use in the preview based on a function passed in\r\n * numberOfColumns is a state variable which will update every time the width of the\r\n * screen changes\r\n */\r\nconst useColumns = (getCols, filesLimit, numberOfFileObjects) => {\r\n  const [numberOfColumns, setCols] = useState(1);\r\n  const width = useWidth();\r\n\r\n  useEffect(() => {\r\n    const cols = getCols(width, filesLimit, numberOfFileObjects);\r\n    setCols(cols);\r\n  }, [filesLimit, getCols, numberOfFileObjects, width]);\r\n\r\n  return numberOfColumns;\r\n};\r\n\r\nexport default useColumns;\r\n","import Chip from '@material-ui/core/Chip';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { isImage as isImageCheck } from '../helpers';\r\nimport useColumns from '../hooks/useColumns';\r\n\r\nconst useStyles = makeStyles(\r\n  ({ spacing }) => ({\r\n    root: {\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      margin: 0,\r\n      backgroundColor: 'rgba(255,255,255,0.87)',\r\n    },\r\n    icon: {\r\n      color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    iconWrapper: {\r\n      height: '100%',\r\n      backgroundColor: '#f2f2f2',\r\n    },\r\n    fileIcon: {\r\n      flexGrow: 1,\r\n      height: '50%',\r\n      marginTop: spacing(3),\r\n    },\r\n    fileIconBottom: {\r\n      marginTop: spacing(9),\r\n    },\r\n  }),\r\n  { name: 'MuiDropzonePreviewList' },\r\n);\r\n\r\nconst PreviewList = ({\r\n  fileObjects,\r\n  filesLimit,\r\n  getCols,\r\n  handleRemove,\r\n  showFileNames,\r\n  useChipsForPreview,\r\n  previewChipProps,\r\n  previewGridClasses,\r\n  previewGridProps,\r\n  previewType,\r\n  getPreviewIcon,\r\n}) => {\r\n  const classes = useStyles();\r\n  const cols = useColumns(getCols, filesLimit, fileObjects.length);\r\n  const previewInside = previewType === 'inside';\r\n\r\n  if (useChipsForPreview) {\r\n    return fileObjects.map((fileObject, i) => (\r\n      <div key={i}>\r\n        <Chip\r\n          variant=\"outlined\"\r\n          {...previewChipProps}\r\n          label={fileObject.file.name}\r\n          onDelete={handleRemove(i)}\r\n        />\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <GridList\r\n      cols={cols}\r\n      className={clsx(\r\n        { [classes.root]: previewInside },\r\n        previewGridClasses.container,\r\n      )}\r\n      {...previewGridProps?.gridList}\r\n    >\r\n      >\r\n      {fileObjects.map((fileObject, i) => {\r\n        const fileTitle = showFileNames && fileObject.file?.name;\r\n        const isImage = isImageCheck(fileObject.file);\r\n\r\n        return (\r\n          <GridListTile\r\n            key={`${fileObject.file?.name ?? 'file'}-${i}`}\r\n            className={clsx(previewGridClasses.gridListTile, {\r\n              [classes.iconWrapper]: !isImage,\r\n            })}\r\n            {...previewGridProps?.gridListTitle}\r\n          >\r\n            {getPreviewIcon(\r\n              fileObject,\r\n              classes,\r\n              isImage,\r\n              previewGridProps?.gridListTitleBar?.titlePosition === 'top',\r\n            )}\r\n\r\n            <GridListTileBar\r\n              title={fileTitle}\r\n              actionIcon={\r\n                <IconButton\r\n                  onClick={handleRemove(i)}\r\n                  aria-label=\"Delete\"\r\n                  className={clsx(\r\n                    previewGridClasses.removeIconButton,\r\n                    classes.icon,\r\n                  )}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              }\r\n              {...previewGridProps?.gridListTitleBar}\r\n            />\r\n          </GridListTile>\r\n        );\r\n      })}\r\n    </GridList>\r\n  );\r\n};\r\n\r\nPreviewList.propTypes = {\r\n  fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  filesLimit: PropTypes.number.isRequired,\r\n  getCols: PropTypes.func.isRequired,\r\n  getPreviewIcon: PropTypes.func.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n  previewChipProps: PropTypes.object,\r\n  previewGridClasses: PropTypes.object,\r\n  previewGridProps: PropTypes.object,\r\n  previewType: PropTypes.string.isRequired,\r\n  showFileNames: PropTypes.bool,\r\n  useChipsForPreview: PropTypes.bool,\r\n};\r\n\r\nexport default PreviewList;\r\n","import IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles = makeStyles(\r\n  (theme) => ({\r\n    success: {\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    error: {\r\n      backgroundColor: theme.palette.error.main,\r\n    },\r\n    info: {\r\n      backgroundColor: theme.palette.info.main,\r\n    },\r\n    warning: {\r\n      backgroundColor: theme.palette.warning.main,\r\n    },\r\n    message: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      '& > svg': {\r\n        marginRight: theme.spacing(1),\r\n      },\r\n    },\r\n    icon: {\r\n      fontSize: 20,\r\n      opacity: 0.9,\r\n    },\r\n    closeButton: {},\r\n  }),\r\n  { name: 'MuiDropzoneSnackbar' },\r\n);\r\n\r\nfunction SnackbarContentWrapper({\r\n  className,\r\n  message,\r\n  onClose,\r\n  variant,\r\n  ...other\r\n}) {\r\n  const classes = useStyles();\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classes.icon} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default SnackbarContentWrapper;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { useCallback } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport { convertBytesToMbsOrKbs, readFile } from '../helpers';\r\nimport useSnackbar from '../hooks/useSnackbar';\r\n\r\nimport PreviewList from './PreviewList';\r\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\r\n\r\nconst useStyles = makeStyles(\r\n  ({ spacing, palette, shape }) => ({\r\n    '@keyframes progress': {\r\n      '0%': {\r\n        backgroundPosition: '0 0',\r\n      },\r\n      '100%': {\r\n        backgroundPosition: '-70px 0',\r\n      },\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      width: '100%',\r\n      minHeight: '250px',\r\n      backgroundColor: palette.background.paper,\r\n      border: 'dashed',\r\n      borderColor: palette.divider,\r\n      borderRadius: shape.borderRadius,\r\n      boxSizing: 'border-box',\r\n      cursor: 'pointer',\r\n      overflow: 'hidden',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n    },\r\n    active: {\r\n      animation: '$progress 2s linear infinite !important',\r\n      backgroundImage: `repeating-linear-gradient(-45deg,\r\n            ${palette.background.paper},\r\n            ${palette.background.paper} 25px,\r\n            ${palette.divider} 25px,\r\n            ${palette.divider} 50px)`,\r\n      backgroundSize: '150% 100%',\r\n      border: 'solid',\r\n      borderColor: palette.primary.light,\r\n    },\r\n    invalid: {\r\n      backgroundImage: `repeating-linear-gradient(-45deg,\r\n            ${palette.error.light},\r\n            ${palette.error.light} 25px,\r\n            ${palette.error.dark} 25px,\r\n            ${palette.error.dark} 50px)`,\r\n      borderColor: palette.error.main,\r\n    },\r\n    textContainer: {\r\n      display: 'flex',\r\n    },\r\n    text: {\r\n      marginBottom: spacing(3),\r\n      marginTop: spacing(3),\r\n    },\r\n    icon: {\r\n      width: 51,\r\n      height: 51,\r\n      color: palette.text.primary,\r\n    },\r\n  }),\r\n  { name: 'MuiDropzoneArea' },\r\n);\r\n\r\nconst shouldShowAlert = (enabledAlerts, alertVariant) => {\r\n  if (!Array.isArray(enabledAlerts)) {\r\n    return true;\r\n  }\r\n  return enabledAlerts.includes(alertVariant);\r\n};\r\n\r\nconst defaultGetCols = (width, filesLimit) => {\r\n  const returnBelowLimit = (number) => {\r\n    if (number < filesLimit) {\r\n      return number;\r\n    }\r\n    return filesLimit;\r\n  };\r\n\r\n  switch (width) {\r\n    case 'xs':\r\n      return returnBelowLimit(1);\r\n    case 'sm':\r\n      return returnBelowLimit(2);\r\n    case 'md':\r\n      return returnBelowLimit(3);\r\n    case 'lg':\r\n      return returnBelowLimit(4);\r\n    case 'xl':\r\n      return returnBelowLimit(5);\r\n    default:\r\n      return returnBelowLimit(3);\r\n  }\r\n};\r\n\r\nconst defaultSnackbarAnchorOrigin = {\r\n  horizontal: 'left',\r\n  vertical: 'bottom',\r\n};\r\n\r\nconst defaultGetPreviewIcon = (fileObject, classes, isImage, titleBarTop) => {\r\n  if (isImage) {\r\n    return <img alt=\"\" className={classes.image} src={fileObject.data} />;\r\n  }\r\n\r\n  return (\r\n    <Grid container className={classes.iconWrapper} justify=\"center\">\r\n      <AttachFileIcon\r\n        className={clsx(classes.fileIcon, {\r\n          [classes.fileIconBottom]: titleBarTop,\r\n        })}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\n/**\r\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\r\n */\r\nconst DropzoneAreaBase = ({\r\n  fileObjects,\r\n  filesLimit,\r\n  getFileAddedMessage,\r\n  getFileLimitExceedMessage,\r\n  getFileRemovedMessage,\r\n  getDropRejectMessage,\r\n  onAdd,\r\n  onAlert,\r\n  onDrop,\r\n  onDropRejected,\r\n  onDelete,\r\n  acceptedFiles,\r\n  alertSnackbarProps,\r\n  disableRejectionFeedback,\r\n  dropzoneClass,\r\n  dropzoneParagraphClass,\r\n  dropzoneProps,\r\n  dropzoneText,\r\n  getCols,\r\n  getPreviewIcon,\r\n  Icon,\r\n  inputProps,\r\n  maxFileSize,\r\n  previewChipProps,\r\n  previewGridClasses,\r\n  previewGridProps,\r\n  previewText,\r\n  previewType,\r\n  showAlerts,\r\n  showFileNames,\r\n  useChipsForPreview,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    handleCloseSnackbar,\r\n    sendMessage,\r\n    snackbarMessage,\r\n    snackbarOpen,\r\n    snackbarVariant,\r\n  } = useSnackbar(onAlert);\r\n\r\n  const handleDropAccepted = useCallback(\r\n    async (droppedFiles, evt) => {\r\n      if (\r\n        filesLimit > 1 &&\r\n        fileObjects.length + droppedFiles.length > filesLimit\r\n      ) {\r\n        const message = getFileLimitExceedMessage(filesLimit);\r\n        sendMessage(message, 'error');\r\n        return;\r\n      }\r\n\r\n      // Notify Drop event\r\n      if (onDrop) {\r\n        onDrop(droppedFiles, evt);\r\n      }\r\n\r\n      // Retrieve fileObjects data\r\n      const fileObjs = await Promise.all(\r\n        droppedFiles.map(async (file) => {\r\n          const data = await readFile(file);\r\n          return {\r\n            file,\r\n            data,\r\n          };\r\n        }),\r\n      );\r\n\r\n      // Notify added files\r\n      if (onAdd) {\r\n        onAdd(fileObjs);\r\n      }\r\n\r\n      const successMessage = fileObjs.reduce(\r\n        (msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name),\r\n        '',\r\n      );\r\n      sendMessage(successMessage, 'success');\r\n    },\r\n    [\r\n      filesLimit,\r\n      fileObjects.length,\r\n      onDrop,\r\n      onAdd,\r\n      sendMessage,\r\n      getFileLimitExceedMessage,\r\n      getFileAddedMessage,\r\n    ],\r\n  );\r\n\r\n  const handleDropRejected = useCallback(\r\n    (rejectedFiles, evt) => {\r\n      let message = '';\r\n      rejectedFiles.forEach((rejectedFile) => {\r\n        message = getDropRejectMessage(\r\n          rejectedFile,\r\n          acceptedFiles,\r\n          maxFileSize,\r\n        );\r\n      });\r\n\r\n      if (onDropRejected) {\r\n        onDropRejected(rejectedFiles, evt);\r\n      }\r\n      sendMessage(message, 'error');\r\n    },\r\n    [\r\n      acceptedFiles,\r\n      getDropRejectMessage,\r\n      maxFileSize,\r\n      onDropRejected,\r\n      sendMessage,\r\n    ],\r\n  );\r\n\r\n  const handleRemove = useCallback(\r\n    (fileIndex) => (event) => {\r\n      event.stopPropagation();\r\n\r\n      // Find removed fileObject\r\n      const removedFileObj = fileObjects[fileIndex];\r\n\r\n      // Notify removed file\r\n      if (onDelete) {\r\n        onDelete(removedFileObj, fileIndex);\r\n      }\r\n      const message = getFileRemovedMessage(removedFileObj.file.name);\r\n      sendMessage(message, 'info');\r\n    },\r\n    [fileObjects, onDelete, getFileRemovedMessage, sendMessage],\r\n  );\r\n\r\n  const acceptFiles = acceptedFiles?.join(',');\r\n  const isMultiple = filesLimit > 1;\r\n  const someFiles = fileObjects.length > 0;\r\n\r\n  const alertsEnabled =\r\n    (typeof showAlerts === 'boolean' && showAlerts) ||\r\n    Array.isArray(showAlerts);\r\n  const isAlertOpen =\r\n    snackbarOpen && shouldShowAlert(showAlerts, snackbarVariant);\r\n\r\n  return (\r\n    <>\r\n      <Dropzone\r\n        {...dropzoneProps}\r\n        accept={acceptFiles}\r\n        onDropAccepted={handleDropAccepted}\r\n        onDropRejected={handleDropRejected}\r\n        maxSize={maxFileSize}\r\n        multiple={isMultiple}\r\n      >\r\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\r\n          <div\r\n            {...getRootProps({\r\n              className: clsx(\r\n                classes.root,\r\n                dropzoneClass,\r\n                isDragActive && classes.active,\r\n                !disableRejectionFeedback && isDragReject && classes.invalid,\r\n              ),\r\n            })}\r\n          >\r\n            <input {...getInputProps(inputProps)} />\r\n\r\n            <Grid\r\n              container\r\n              className={classes.textContainer}\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"p\"\r\n                className={clsx(classes.text, dropzoneParagraphClass)}\r\n              >\r\n                {dropzoneText}\r\n              </Typography>\r\n\r\n              {Icon ? (\r\n                <Icon className={classes.icon} />\r\n              ) : (\r\n                <CloudUploadIcon className={classes.icon} />\r\n              )}\r\n            </Grid>\r\n\r\n            {someFiles && previewType === 'inside' ? (\r\n              <PreviewList\r\n                fileObjects={fileObjects}\r\n                filesLimit={filesLimit}\r\n                getCols={getCols}\r\n                handleRemove={handleRemove}\r\n                getPreviewIcon={getPreviewIcon}\r\n                showFileNames={showFileNames}\r\n                useChipsForPreview={useChipsForPreview}\r\n                previewChipProps={previewChipProps}\r\n                previewGridClasses={previewGridClasses}\r\n                previewGridProps={previewGridProps}\r\n                previewType={previewType}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      {someFiles && previewType === 'below' ? (\r\n        <>\r\n          <Typography variant=\"subtitle1\" component=\"span\">\r\n            {previewText}\r\n          </Typography>\r\n\r\n          <PreviewList\r\n            fileObjects={fileObjects}\r\n            filesLimit={filesLimit}\r\n            getCols={getCols}\r\n            handleRemove={handleRemove}\r\n            getPreviewIcon={getPreviewIcon}\r\n            showFileNames={showFileNames}\r\n            useChipsForPreview={useChipsForPreview}\r\n            previewChipProps={previewChipProps}\r\n            previewGridClasses={previewGridClasses}\r\n            previewGridProps={previewGridProps}\r\n            previewType={previewType}\r\n          />\r\n        </>\r\n      ) : null}\r\n\r\n      {alertsEnabled ? (\r\n        <Snackbar\r\n          anchorOrigin={defaultSnackbarAnchorOrigin}\r\n          autoHideDuration={6000}\r\n          {...alertSnackbarProps}\r\n          open={isAlertOpen}\r\n          onClose={handleCloseSnackbar}\r\n        >\r\n          <SnackbarContentWrapper\r\n            onClose={handleCloseSnackbar}\r\n            variant={snackbarVariant}\r\n            message={snackbarMessage}\r\n          />\r\n        </Snackbar>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nDropzoneAreaBase.defaultProps = {\r\n  acceptedFiles: [],\r\n  filesLimit: 3,\r\n  fileObjects: [],\r\n  maxFileSize: 3000000,\r\n  dropzoneText: 'Drag and drop a file here or click',\r\n  previewText: 'Preview:',\r\n  previewType: 'inside',\r\n  disableRejectionFeedback: false,\r\n  showFileNames: true,\r\n  useChipsForPreview: false,\r\n  previewChipProps: {},\r\n  previewGridClasses: {},\r\n  previewGridProps: {},\r\n  showAlerts: true,\r\n  alertSnackbarProps: {\r\n    anchorOrigin: {\r\n      horizontal: 'left',\r\n      vertical: 'bottom',\r\n    },\r\n    autoHideDuration: 6000,\r\n  },\r\n  getCols: defaultGetCols,\r\n  getFileLimitExceedMessage: (filesLimit) =>\r\n    `Maximum allowed number of files exceeded. Only ${filesLimit} allowed`,\r\n  getFileAddedMessage: (fileName) => `File ${fileName} successfully added.`,\r\n  getPreviewIcon: defaultGetPreviewIcon,\r\n  getFileRemovedMessage: (fileName) => `File ${fileName} removed.`,\r\n  getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\r\n    let message = `File ${rejectedFile.name} was rejected. `;\r\n    if (!acceptedFiles.includes(rejectedFile.type)) {\r\n      message += 'File type not supported. ';\r\n    }\r\n    if (rejectedFile.size > maxFileSize) {\r\n      message += `File is too big. Size limit is ${convertBytesToMbsOrKbs(\r\n        maxFileSize,\r\n      )}. `;\r\n    }\r\n    return message;\r\n  },\r\n};\r\n\r\nexport const FileObjectShape = PropTypes.shape({\r\n  file: PropTypes.object,\r\n  data: PropTypes.any,\r\n});\r\n\r\nDropzoneAreaBase.propTypes = {\r\n  /** A list of file types to accept.\r\n   * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\r\n   */\r\n  acceptedFiles: PropTypes.arrayOf(PropTypes.string),\r\n  /** Maximum number of files that can be loaded into the dropzone. */\r\n  filesLimit: PropTypes.number,\r\n  /** Icon to be displayed inside the dropzone area. */\r\n  Icon: PropTypes.elementType,\r\n  /** Currently loaded files. */\r\n  fileObjects: PropTypes.arrayOf(FileObjectShape),\r\n  /** Maximum file size (in bytes) that the dropzone will accept. */\r\n  maxFileSize: PropTypes.number,\r\n  /** Text inside the dropzone. */\r\n  dropzoneText: PropTypes.string,\r\n  /** Custom CSS class name for dropzone container. */\r\n  dropzoneClass: PropTypes.string,\r\n  /** Custom CSS class name for text inside the container. */\r\n  dropzoneParagraphClass: PropTypes.string,\r\n  /** Disable feedback effect when dropping rejected files. */\r\n  disableRejectionFeedback: PropTypes.bool,\r\n  /** Shows file name under the dropzone image. */\r\n  showFileNames: PropTypes.bool,\r\n  /** Uses deletable Material-UI Chip components to display file names. */\r\n  useChipsForPreview: PropTypes.bool,\r\n  /**\r\n   * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\r\n   *\r\n   * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\r\n   */\r\n  previewChipProps: PropTypes.object,\r\n  /**\r\n   * Custom CSS classNames for preview Grid components.<br/>\r\n   * Should be in the form {container: string, item: string, image: string}.\r\n   */\r\n  previewGridClasses: PropTypes.object,\r\n  /**\r\n   * Props to pass to the Material-UI Grid components.<br/>\r\n   * Should be in the form {container: GridProps, item: GridProps}.\r\n   *\r\n   * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\r\n   */\r\n  previewGridProps: PropTypes.object,\r\n  /** The label for the file preview section. */\r\n  previewText: PropTypes.string,\r\n  /** Determines whether previews are shown inside the dropzone area, below, or not at all. Acceptable values are 'inside', 'below', 'none'. */\r\n  previewType: PropTypes.oneOf(['inside', 'below', 'none']),\r\n  /**\r\n   * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\r\n   *\r\n   * - can be a boolean (\"global\" `true` or `false` for all alerts).\r\n   * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\r\n   *  - showAlerts={['error']} for only errors.\r\n   *  - showAlerts={['error', 'info']} for both errors and info.\r\n   *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\r\n   *  - showAlerts={[]} is same as showAlerts={false}.\r\n   */\r\n  showAlerts: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\r\n  ]),\r\n  /**\r\n   * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\r\n   *\r\n   * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\r\n   */\r\n  alertSnackbarProps: PropTypes.object,\r\n  /**\r\n   * Props to pass to the Dropzone component.\r\n   *\r\n   * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\r\n   */\r\n  dropzoneProps: PropTypes.object,\r\n  /**\r\n   * Attributes applied to the input element.\r\n   *\r\n   * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\r\n   */\r\n  inputProps: PropTypes.object,\r\n  /**\r\n   * A function which determines which the number of columns to display in the preview list\r\n   *\r\n   * *Default*: Returns a sensible number of columns depending on the screen size (i.e. xs=1, sm=2, md=3, lg=4, xl=5) without exceeding the filesLimit (e.g. There would be no point displaying 4 columns if the filesLimit is 3)\r\n   *\r\n   * @param {string} width Width prop from useWidth, this will be one of ['xs','sm','md','lg','xl'] depending on the current screen size\r\n   * @param {number} filesLimit The `filesLimit` prop\r\n   * @param {number} currentNumberOfFiles The number of files in the `state.fileObjects`\r\n   */\r\n  getCols: PropTypes.func,\r\n  /**\r\n   * Get alert message to display when files limit is exceed.\r\n   *\r\n   * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\r\n   *\r\n   * @param {number} filesLimit The `filesLimit` currently set for the component.\r\n   */\r\n  getFileLimitExceedMessage: PropTypes.func,\r\n  /**\r\n   * Get alert message to display when a new file is added.\r\n   *\r\n   * *Default*: \"File ${fileName} successfully added.\"\r\n   *\r\n   * @param {string} fileName The newly added file name.\r\n   */\r\n  getFileAddedMessage: PropTypes.func,\r\n  /**\r\n   * Get alert message to display when a file is removed.\r\n   *\r\n   * *Default*: \"File ${fileName} removed.\"\r\n   *\r\n   * @param {string} fileName The name of the removed file.\r\n   */\r\n  getFileRemovedMessage: PropTypes.func,\r\n  /**\r\n   * Get alert message to display when a file is rejected onDrop.\r\n   *\r\n   * *Default*: \"File ${rejectedFile.name} was rejected.\"\r\n   *\r\n   * @param {Object} rejectedFile The file that got rejected\r\n   * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\r\n   * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\r\n   */\r\n  getDropRejectMessage: PropTypes.func,\r\n  /**\r\n   * A function which determines which icon to display for a file preview.\r\n   *\r\n   * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\r\n   *\r\n   * @param {FileObject} objectFile The file which the preview will belong to\r\n   * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\r\n   */\r\n  getPreviewIcon: PropTypes.func,\r\n  /**\r\n   * Fired when new files are added to dropzone.\r\n   *\r\n   * @param {FileObject[]} newFiles The new files added to the dropzone.\r\n   */\r\n  onAdd: PropTypes.func,\r\n  /**\r\n   * Fired when an alert is triggered.\r\n   *\r\n   * @param {string} message Alert message.\r\n   * @param {string} variant One of \"error\", \"info\", \"success\".\r\n   */\r\n  onAlert: PropTypes.func,\r\n  /**\r\n   * Fired when a file is deleted from the previews panel.\r\n   *\r\n   * @param {FileObject} deletedFileObject The file that was removed.\r\n   * @param {number} index The index of the removed file object.\r\n   */\r\n  onDelete: PropTypes.func,\r\n  /**\r\n   * Fired when the user drops files into the dropzone.\r\n   *\r\n   * @param {File[]} droppedFiles All the files dropped into the dropzone.\r\n   * @param {Event} event The react-dropzone drop event.\r\n   */\r\n  onDrop: PropTypes.func,\r\n  /**\r\n   * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\r\n   *\r\n   * @param {File[]} rejectedFiles All the rejected files.\r\n   * @param {Event} event The react-dropzone drop event.\r\n   */\r\n  onDropRejected: PropTypes.func,\r\n};\r\n\r\nexport default DropzoneAreaBase;\r\n","import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport useFiles from '../hooks/useFiles';\r\n\r\nimport DropzoneAreaBase from './DropzoneAreaBase';\r\n\r\n/**\r\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\r\n *\r\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\r\n *\r\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\r\n */\r\n\r\nconst DropzoneArea = ({\r\n  clearOnUnmount,\r\n  initialFiles,\r\n  onChange,\r\n  onDelete,\r\n  filesLimit,\r\n  ...dropzoneAreaBaseProps\r\n}) => {\r\n  const { handleDeleteFile, handleAddFiles, fileObjects } = useFiles({\r\n    onChange,\r\n    clearOnUnmount,\r\n    initialFiles,\r\n    filesLimit,\r\n    onDelete,\r\n  });\r\n\r\n  return (\r\n    <DropzoneAreaBase\r\n      {...dropzoneAreaBaseProps}\r\n      fileObjects={fileObjects}\r\n      onAdd={handleAddFiles}\r\n      onDelete={handleDeleteFile}\r\n    />\r\n  );\r\n};\r\n\r\nDropzoneArea.defaultProps = {\r\n  clearOnUnmount: true,\r\n  filesLimit: 3,\r\n  initialFiles: [],\r\n};\r\n\r\nDropzoneArea.propTypes = {\r\n  ...DropzoneAreaBase.propTypes,\r\n  /** Clear uploaded files when component is unmounted. */\r\n  clearOnUnmount: PropTypes.bool,\r\n  /** List containing File objects or URL strings.<br/>\r\n   * **Note:** Please take care of CORS.\r\n   */\r\n  initialFiles: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\r\n  ),\r\n  /** Maximum number of files that can be loaded into the dropzone. */\r\n  filesLimit: PropTypes.number,\r\n  /**\r\n   * Fired when the files inside dropzone change.\r\n   *\r\n   * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * Fired when a file is deleted from the previews panel.\r\n   *\r\n   * @param {File} deletedFile The file that was removed.\r\n   */\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default DropzoneArea;\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport DropzoneAreaBase from './DropzoneAreaBase';\r\n\r\n/**\r\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\r\n *\r\n * It supports all the Props and Methods from `DropzoneAreaBase`.\r\n */\r\nconst DropzoneDialogBase = ({\r\n  cancelButtonText,\r\n  dialogProps,\r\n  dialogTitle,\r\n  fullWidth,\r\n  maxWidth,\r\n  onClose,\r\n  onSave,\r\n  open,\r\n  submitButtonText,\r\n  ...dropzoneAreaProps\r\n}) => {\r\n  // Submit button state\r\n  const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\r\n\r\n  return (\r\n    <Dialog\r\n      cancelButtonText={cancelButtonText}\r\n      dialogProps={dialogProps}\r\n      dialogTitle={dialogTitle}\r\n      maxWidth={maxWidth}\r\n      onClose={onClose}\r\n      onSave={onSave}\r\n      open={open}\r\n      fullWidth={fullWidth}\r\n      fileObjects={dropzoneAreaProps.fileObjects}\r\n    >\r\n      <DialogTitle>{dialogTitle}</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DropzoneAreaBase {...dropzoneAreaProps} />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={onClose}>\r\n          {cancelButtonText}\r\n        </Button>\r\n\r\n        <Button color=\"primary\" disabled={submitDisabled} onClick={onSave}>\r\n          {submitButtonText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nDropzoneDialogBase.defaultProps = {\r\n  open: false,\r\n  dialogTitle: 'Upload file',\r\n  dialogProps: {},\r\n  fullWidth: true,\r\n  maxWidth: 'sm',\r\n  cancelButtonText: 'Cancel',\r\n  submitButtonText: 'Submit',\r\n  showPreviews: true,\r\n  showPreviewsInDropzone: false,\r\n  showFileNamesInPreview: true,\r\n};\r\n\r\nDropzoneDialogBase.propTypes = {\r\n  ...DropzoneAreaBase.propTypes,\r\n  /** Sets whether the dialog is open or closed. */\r\n  open: PropTypes.bool,\r\n  /** The Dialog title. */\r\n  dialogTitle: PropTypes.string,\r\n  /**\r\n   * Props to pass to the Material-UI Dialog components.\r\n   * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\r\n   */\r\n  dialogProps: PropTypes.object,\r\n  /**\r\n   * If `true`, the dialog stretches to `maxWidth`.<br/>\r\n   * Notice that the dialog width grow is limited by the default margin.\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n  /**\r\n   * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\r\n   * Set to `false` to disable `maxWidth`.\r\n   */\r\n  maxWidth: PropTypes.string,\r\n  /** Cancel button text in dialog. */\r\n  cancelButtonText: PropTypes.string,\r\n  /** Submit button text in dialog. */\r\n  submitButtonText: PropTypes.string,\r\n  /**\r\n   * Fired when the modal is closed.\r\n   *\r\n   * @param {SyntheticEvent} event The react `SyntheticEvent`\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * Fired when the user clicks the Submit button.\r\n   *\r\n   * @param {SyntheticEvent} event The react `SyntheticEvent`\r\n   */\r\n  onSave: PropTypes.func,\r\n  /**\r\n   * Shows previews **BELOW** the dropzone.<br/>\r\n   * **Note:** By default previews show up under in the Dialog and inside in the standalone.\r\n   */\r\n  showPreviews: PropTypes.bool,\r\n  /** Shows preview **INSIDE** the dropzone area. */\r\n  showPreviewsInDropzone: PropTypes.bool,\r\n  /** Shows file name under the image. */\r\n  showFileNamesInPreview: PropTypes.bool,\r\n};\r\n\r\nexport default DropzoneDialogBase;\r\n","import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport useFiles from '../hooks/useFiles';\r\n\r\nimport DropzoneDialogBase from './DropzoneDialogBase';\r\n\r\n/**\r\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\r\n *\r\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\r\n *\r\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\r\n */\r\nconst DropzoneDialog = ({\r\n  clearOnUnmount,\r\n  onClose,\r\n  onSave,\r\n  initialFiles,\r\n  filesLimit,\r\n  onDelete,\r\n  onChange,\r\n  ...other\r\n}) => {\r\n  const {\r\n    handleDeleteFile,\r\n    handleAddFiles,\r\n    fileObjects,\r\n    handleResetFiles,\r\n  } = useFiles({\r\n    onChange,\r\n    clearOnUnmount,\r\n    initialFiles,\r\n    filesLimit,\r\n    onDelete,\r\n  });\r\n\r\n  const handleClose = (evt) => {\r\n    if (onClose) {\r\n      onClose(evt);\r\n    }\r\n  };\r\n\r\n  const handleSave = (evt) => {\r\n    if (onSave) {\r\n      onSave(\r\n        fileObjects.map((fileObject) => fileObject.file),\r\n        evt,\r\n      );\r\n    }\r\n\r\n    if (clearOnUnmount) {\r\n      handleResetFiles();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DropzoneDialogBase\r\n      clearOnUnmount={clearOnUnmount}\r\n      initialFiles={initialFiles}\r\n      filesLimit={filesLimit}\r\n      onChange={onChange}\r\n      fileObjects={fileObjects}\r\n      onAdd={handleAddFiles}\r\n      onDelete={handleDeleteFile}\r\n      onClose={handleClose}\r\n      onSave={handleSave}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nDropzoneDialog.defaultProps = {\r\n  clearOnUnmount: true,\r\n  filesLimit: 3,\r\n  initialFiles: [],\r\n};\r\n\r\nDropzoneDialog.propTypes = {\r\n  ...DropzoneDialogBase.propTypes,\r\n  /** Clear uploaded files when component is unmounted. */\r\n  clearOnUnmount: PropTypes.bool,\r\n  /** Maximum number of files that can be loaded into the dropzone. */\r\n  filesLimit: PropTypes.number,\r\n  /** List containing File objects or URL strings.<br/>\r\n   * **Note:** Please take care of CORS.\r\n   */\r\n  initialFiles: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\r\n  ),\r\n  /**\r\n   * Fired when the user clicks the Submit button.\r\n   *\r\n   * @param {File[]} files All the files currently inside the Dropzone.\r\n   * @param {SyntheticEvent} event The react `SyntheticEvent`.\r\n   */\r\n  onSave: PropTypes.func,\r\n};\r\n\r\nexport default DropzoneDialog;\r\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","useFiles","onChange","clearOnUnmount","initialFiles","filesLimit","onDelete","useState","fileObjects","setFileObjects","loadInitialFiles","useCallback","all","map","initialFile","fileObjs","prev","console","log","handleAddFiles","newFileObjects","handleDeleteFile","removedFileObj","removedFileObjIdx","remainingFileObjs","filter","fileObject","i","handleResetFiles","useEffect","useSnackbar","onAlert","open","message","variant","state","setState","sendMessage","handleCloseSnackbar","snackbarMessage","snackbarVariant","snackbarOpen","useWidth","theme","useTheme","keys","breakpoints","reverse","reduce","output","key","matches","matchMediaQuery","up","useColumns","getCols","numberOfFileObjects","numberOfColumns","setCols","width","cols","useStyles","makeStyles","spacing","root","alignItems","position","height","margin","backgroundColor","icon","color","iconWrapper","fileIcon","flexGrow","marginTop","fileIconBottom","name","React.createElement","PreviewList","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","previewType","getPreviewIcon","classes","length","previewInside","clsx","container","gridList","fileTitle","isImageCheck","gridListTile","gridListTitle","gridListTitleBar","titlePosition","removeIconButton","propTypes","PropTypes","arrayOf","object","isRequired","number","func","string","bool","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","palette","main","display","marginRight","fontSize","opacity","closeButton","SnackbarContentWrapper","className","onClose","other","Icon","node","oneOf","shape","backgroundPosition","minHeight","background","paper","border","borderColor","divider","borderRadius","boxSizing","cursor","overflow","flexDirection","justifyContent","active","animation","backgroundImage","backgroundSize","primary","light","invalid","dark","textContainer","text","marginBottom","shouldShowAlert","enabledAlerts","alertVariant","Array","isArray","includes","defaultGetCols","returnBelowLimit","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","titleBarTop","image","DropzoneAreaBase","getFileAddedMessage","getFileLimitExceedMessage","getFileRemovedMessage","getDropRejectMessage","onAdd","onDrop","onDropRejected","acceptedFiles","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","maxFileSize","previewText","showAlerts","handleDropAccepted","droppedFiles","evt","successMessage","msg","fileObj","handleDropRejected","rejectedFiles","forEach","rejectedFile","fileIndex","stopPropagation","acceptFiles","join","isMultiple","someFiles","alertsEnabled","isAlertOpen","getRootProps","getInputProps","isDragActive","isDragReject","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","elementType","oneOfType","DropzoneArea","dropzoneAreaBaseProps","DropzoneDialogBase","cancelButtonText","dialogProps","dialogTitle","fullWidth","maxWidth","onSave","submitButtonText","dropzoneAreaProps","submitDisabled","showPreviews","showPreviewsInDropzone","showFileNamesInPreview","DropzoneDialog","handleClose","handleSave"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,MAAIA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,MAA4B,OAAhC,EAAyC;AACvC,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;AAEM,SAASC,sBAAT,CAAgCC,QAAhC,EAA0C;AAC/C,MAAIC,IAAI,GAAG,EAAX,CAD+C;;AAG/C,MAAID,QAAQ,IAAI,OAAhB,EAAyB;AACvBC,IAAAA,IAAI,aAAMD,QAAQ,GAAG,OAAjB,eAAJ;AACD,GAFD,MAEO,IAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAC3BC,IAAAA,IAAI,aAAMD,QAAQ,GAAG,IAAjB,eAAJ;AACD,GAFM,MAEA;AACLC,IAAAA,IAAI,aAAMD,QAAN,WAAJ;AACD;;AACD,SAAOC,IAAP;AACD;SAEqBC,iBAAtB;AAAA;AAAA;;;gFAAO,iBAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBC,KAAK,CAACD,GAAD,CADvB;;AAAA;AACCE,YAAAA,QADD;AAAA;AAAA,mBAEcA,QAAQ,CAACC,IAAT,EAFd;;AAAA;AAECC,YAAAA,IAFD;AAGCC,YAAAA,QAHD,GAGY;AAAEX,cAAAA,IAAI,EAAEU,IAAI,CAACV;AAAb,aAHZ;AAICY,YAAAA,QAJD,GAIYN,GAAG,CAACO,OAAJ,CAAY,MAAZ,EAAoB,EAApB,EAAwBZ,KAAxB,CAA8B,GAA9B,EAAmCa,GAAnC,EAJZ;AAAA,6CAKE,IAAIC,IAAJ,CAAS,CAACL,IAAD,CAAT,EAAiBE,QAAjB,EAA2BD,QAA3B,CALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAQA,SAASK,QAAT,CAAkBjB,IAAlB,EAAwB;AAC7B,SAAO,IAAIkB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,KAAD,EAAW;AAAA;;AACzBL,MAAAA,OAAO,CAACK,KAAD,aAACA,KAAD,wCAACA,KAAK,CAAEC,MAAR,kDAAC,cAAeC,MAAhB,CAAP;AACD,KAFD;;AAGAL,IAAAA,MAAM,CAACM,OAAP,GAAiB,UAACH,KAAD,EAAW;AAC1BH,MAAAA,MAAM,CAACO,KAAP;AACAR,MAAAA,MAAM,CAACI,KAAD,CAAN;AACD,KAHD;;AAIAH,IAAAA,MAAM,CAACQ,aAAP,CAAqB7B,IAArB;AACD,GAVM,CAAP;AAWD;;ACpCD;;;;AAGA,IAAM8B,QAAQ,GAAG,SAAXA,QAAW,OAMX;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,QACI,QADJA,QACI;;AAAA,kBACkCC,QAAQ,CAAC,EAAD,CAD1C;AAAA;AAAA,MACGC,WADH;AAAA,MACgBC,cADhB;;AAGJ,MAAMC,gBAAgB,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEVtB,OAAO,CAACuB,GAAR,CACrBR,YAAY,CAACS,GAAb;AAAA,mFAAiB,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEX,OAAOA,WAAP,KAAuB,QAFZ;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAGArC,iBAAiB,CAACqC,WAAD,CAHjB;;AAAA;AAGb3C,wBAAAA,IAHa;AAAA;AAAA;;AAAA;AAKbA,wBAAAA,IAAI,GAAG2C,WAAP;;AALa;AAAA;AAAA,+BAOI1B,QAAQ,CAACjB,IAAD,CAPZ;;AAAA;AAOTW,wBAAAA,IAPS;AAAA,yDASR;AACLX,0BAAAA,IAAI,EAAJA,IADK;AAELW,0BAAAA,IAAI,EAAJA;AAFK,yBATQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAjB;;AAAA;AAAA;AAAA;AAAA,gBADqB,CAFU;;AAAA;AAE3BiC,YAAAA,QAF2B;AAmBjCN,YAAAA,cAAc,CAAC,UAACO,IAAD;AAAA,kDAAcA,IAAd,sBAAuBD,QAAvB;AAAA,aAAD,CAAd;AAnBiC;AAAA;;AAAA;AAAA;AAAA;AAqBjCE,YAAAA,OAAO,CAACC,GAAR;;AArBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAuBjC,CAACd,YAAD,CAvBiC,CAApC;AAyBA,MAAMe,cAAc,GAAGR,WAAW,CAChC,UAACS,cAAD,EAAoB;AAClB;AACAX,IAAAA,cAAc,CAAC,UAACO,IAAD,EAAU;AACvB,UAAIX,UAAU,IAAI,CAAlB,EAAqB;AACnB,eAAO,CAACe,cAAc,CAAC,CAAD,CAAf,CAAP;AACD;;AAED,0CAAWJ,IAAX,sBAAoBI,cAApB;AACD,KANa,CAAd;AAOD,GAV+B,EAWhC,CAACf,UAAD,CAXgC,CAAlC;AAcA,MAAMgB,gBAAgB,GAAGV,WAAW,CAClC,UAACW,cAAD,EAAiBC,iBAAjB,EAAuC;AACrC;AACA,QAAMC,iBAAiB,GAAGhB,WAAW,CAACiB,MAAZ,CAAmB,UAACC,UAAD,EAAaC,CAAb,EAAmB;AAC9D,aAAOA,CAAC,KAAKJ,iBAAb;AACD,KAFyB,CAA1B,CAFqC;;AAOrC,QAAIjB,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACgB,cAAc,CAACnD,IAAhB,CAAR;AACD,KAToC;;;AAYrCsC,IAAAA,cAAc,CAACe,iBAAD,CAAd;AACD,GAdiC,EAelC,CAAClB,QAAD,EAAWE,WAAX,CAfkC,CAApC;;AAkBA,MAAMoB,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMnB,cAAc,CAAC,EAAD,CAApB;AAAA,GAAzB,CA5DI;;;AA+DJoB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI3B,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACM,WAAW,CAACK,GAAZ,CAAgB,UAACa,UAAD;AAAA,eAAgBA,UAAU,CAACvD,IAA3B;AAAA,OAAhB,CAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACqC,WAAD,EAAcN,QAAd,CAJM,CAAT,CA/DI;;AAsEJ2B,EAAAA,SAAS,CAAC,YAAM;AACdnB,IAAAA,gBAAgB;AAEhB,WAAO,YAAM;AACX,UAAIP,cAAJ,EAAoB;AAClBM,QAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,KAJD;AAKD,GARQ,EAQN,CAACN,cAAD,EAAiBO,gBAAjB,CARM,CAAT;AAUA,SAAO;AACLS,IAAAA,cAAc,EAAdA,cADK;AAELE,IAAAA,gBAAgB,EAAhBA,gBAFK;AAGLO,IAAAA,gBAAgB,EAAhBA,gBAHK;AAILpB,IAAAA,WAAW,EAAXA;AAJK,GAAP;AAMD,CA5FD;;ACLA;;;;AAGA,IAAMsB,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAa;AAAA,kBACLxB,QAAQ,CAAC;AACjCyB,IAAAA,IAAI,EAAE,KAD2B;AAEjCC,IAAAA,OAAO,EAAE,EAFwB;AAGjCC,IAAAA,OAAO,EAAE;AAHwB,GAAD,CADH;AAAA;AAAA,MACxBC,KADwB;AAAA,MACjBC,QADiB;;AAO/B,MAAMC,WAAW,GAAG1B,WAAW,CAC7B,UAACsB,OAAD,EAAUC,OAAV,EAAsB;AACpBE,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,IADC;AAEPC,MAAAA,OAAO,EAAPA,OAFO;AAGPC,MAAAA,OAAO,EAAPA;AAHO,KAAD,CAAR;;AAMA,QAAIH,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACE,OAAD,EAAUC,OAAV,CAAP;AACD;AACF,GAX4B,EAY7B,CAACH,OAAD,CAZ6B,CAA/B;AAeA,MAAMO,mBAAmB,GAAG3B,WAAW,CAAC,YAAM;AAC5CyB,IAAAA,QAAQ,CAAC,UAACpB,IAAD;AAAA,0BAAgBA,IAAhB;AAAsBgB,QAAAA,IAAI,EAAE;AAA5B;AAAA,KAAD,CAAR;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,SAAO;AACLM,IAAAA,mBAAmB,EAAnBA,mBADK;AAELD,IAAAA,WAAW,EAAXA,WAFK;AAGLE,IAAAA,eAAe,EAAEJ,KAAK,CAACF,OAHlB;AAILO,IAAAA,eAAe,EAAEL,KAAK,CAACD,OAJlB;AAKLO,IAAAA,YAAY,EAAEN,KAAK,CAACH;AALf,GAAP;AAOD,CAjCD;;ACFA;;;;;AAIA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,KAAK,GAAGC,QAAQ,EAAtB;;AACA,MAAMC,IAAI,GAAG,mBAAIF,KAAK,CAACG,WAAN,CAAkBD,IAAtB,EAA4BE,OAA5B,EAAb;;AACA,SACEF,IAAI,CAACG,MAAL,CAAY,UAACC,MAAD,EAASC,GAAT,EAAiB;AAC3B,QAAMC,OAAO,GAAGC,eAAe,CAACT,KAAK,CAACG,WAAN,CAAkBO,EAAlB,CAAqBH,GAArB,CAAD,CAA/B;AACA,WAAO,CAACD,MAAD,IAAWE,OAAX,GAAqBD,GAArB,GAA2BD,MAAlC;AACD,GAHD,EAGG,IAHH,KAGY,IAJd;AAMD,CATD;;ACHA;;;;;;AAKA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUlD,UAAV,EAAsBmD,mBAAtB,EAA8C;AAAA,kBAC5BjD,QAAQ,CAAC,CAAD,CADoB;AAAA;AAAA,MACxDkD,eADwD;AAAA,MACvCC,OADuC;;AAE/D,MAAMC,KAAK,GAAGjB,QAAQ,EAAtB;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM+B,IAAI,GAAGL,OAAO,CAACI,KAAD,EAAQtD,UAAR,EAAoBmD,mBAApB,CAApB;AACAE,IAAAA,OAAO,CAACE,IAAD,CAAP;AACD,GAHQ,EAGN,CAACvD,UAAD,EAAakD,OAAb,EAAsBC,mBAAtB,EAA2CG,KAA3C,CAHM,CAAT;AAKA,SAAOF,eAAP;AACD,CAVD;;ACKA,IAAMI,SAAS,GAAGC,UAAU,CAC1B;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SAAkB;AAChBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE,QADR;AAEJC,MAAAA,QAAQ,EAAE,UAFN;AAGJP,MAAAA,KAAK,EAAE,MAHH;AAIJQ,MAAAA,MAAM,EAAE,MAJJ;AAKJC,MAAAA,MAAM,EAAE,CALJ;AAMJC,MAAAA,eAAe,EAAE;AANb,KADU;AAShBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH,KATU;AAYhBC,IAAAA,WAAW,EAAE;AACXL,MAAAA,MAAM,EAAE,MADG;AAEXE,MAAAA,eAAe,EAAE;AAFN,KAZG;AAgBhBI,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAE,CADF;AAERP,MAAAA,MAAM,EAAE,KAFA;AAGRQ,MAAAA,SAAS,EAAEZ,OAAO,CAAC,CAAD;AAHV,KAhBM;AAqBhBa,IAAAA,cAAc,EAAE;AACdD,MAAAA,SAAS,EAAEZ,OAAO,CAAC,CAAD;AADJ;AArBA,GAAlB;AAAA,CAD0B,EA0B1B;AAAEc,EAAAA,IAAI,EAAE;AAAR,CA1B0B,CAA5B;;yBAmGkBC,cAAC,UAAD;;AAtElB,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAYd;AAAA,MAXJvE,WAWI,SAXJA,WAWI;AAAA,MAVJH,UAUI,SAVJA,UAUI;AAAA,MATJkD,OASI,SATJA,OASI;AAAA,MARJyB,YAQI,SARJA,YAQI;AAAA,MAPJC,aAOI,SAPJA,aAOI;AAAA,MANJC,kBAMI,SANJA,kBAMI;AAAA,MALJC,gBAKI,SALJA,gBAKI;AAAA,MAJJC,kBAII,SAJJA,kBAII;AAAA,MAHJC,gBAGI,SAHJA,gBAGI;AAAA,MAFJC,WAEI,SAFJA,WAEI;AAAA,MADJC,cACI,SADJA,cACI;AACJ,MAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,MAAMD,IAAI,GAAGN,UAAU,CAACC,OAAD,EAAUlD,UAAV,EAAsBG,WAAW,CAACiF,MAAlC,CAAvB;AACA,MAAMC,aAAa,GAAGJ,WAAW,KAAK,QAAtC;;AAEA,MAAIJ,kBAAJ,EAAwB;AACtB,WAAO1E,WAAW,CAACK,GAAZ,CAAgB,UAACa,UAAD,EAAaC,CAAb;AAAA,0BACrBmD;AAAK,QAAA,GAAG,EAAEnD;AAAV,sBACEmD,cAAC,IAAD;AACE,QAAA,OAAO,EAAC;AADV,SAEMK,gBAFN;AAGE,QAAA,KAAK,EAAEzD,UAAU,CAACvD,IAAX,CAAgB0G,IAHzB;AAIE,QAAA,QAAQ,EAAEG,YAAY,CAACrD,CAAD;AAJxB,SADF,CADqB;AAAA,KAAhB,CAAP;AAUD;;AAED,sBACEmD,cAAC,QAAD;AACE,IAAA,IAAI,EAAElB,IADR;AAEE,IAAA,SAAS,EAAE+B,IAAI,CAEbP,kBAAkB,CAACQ,SAFN,EACKF,aADL,IACVF,OAAO,CAACxB,IADE;AAFjB,KAMMqB,gBANN,aAMMA,gBANN,uBAMMA,gBAAgB,CAAEQ,QANxB,QASGrF,WAAW,CAACK,GAAZ,CAAgB,UAACa,UAAD,EAAaC,CAAb,EAAmB;AAAA;;AAClC,QAAMmE,SAAS,GAAGb,aAAa,yBAAIvD,UAAU,CAACvD,IAAf,qDAAI,iBAAiB0G,IAArB,CAA/B;AACA,QAAM3G,SAAO,GAAG6H,OAAY,CAACrE,UAAU,CAACvD,IAAZ,CAA5B;AAEA,wBACE2G,cAAC,YAAD;AACE,MAAA,GAAG,0DAAKpD,UAAU,CAACvD,IAAhB,sDAAK,kBAAiB0G,IAAtB,yEAA8B,MAA9B,cAAwClD,CAAxC,CADL;AAEE,MAAA,SAAS,EAAEgE,IAAI,CAACP,kBAAkB,CAACY,YAApB,EACU,CAAC9H,SADX,IACZsH,OAAO,CAAChB,WADI;AAFjB,OAKMa,gBALN,aAKMA,gBALN,uBAKMA,gBAAgB,CAAEY,aALxB,GAOGV,cAAc,CACb7D,UADa,EAEb8D,OAFa,EAGbtH,SAHa,EAIb,CAAAmH,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,qCAAAA,gBAAgB,CAAEa,gBAAlB,gFAAoCC,aAApC,MAAsD,KAJzC,CAPjB,eAcErB,cAAC,eAAD;AACE,MAAA,KAAK,EAAEgB,SADT;AAEE,MAAA,UAAU,eACRhB,cAAC,UAAD;AACE,QAAA,OAAO,EAAEE,YAAY,CAACrD,CAAD,CADvB;AAEE,sBAAW,QAFb;AAGE,QAAA,SAAS,EAAEgE,IAAI,CACbP,kBAAkB,CAACgB,gBADN,EAEbZ,OAAO,CAAClB,IAFK;AAHjB;AAHJ,OAcMe,gBAdN,aAcMA,gBAdN,uBAcMA,gBAAgB,CAAEa,gBAdxB,EAdF,CADF;AAiCD,GArCA,CATH,CADF;AAkDD,CAhFD;;AAkFA,wCAAAnB,WAAW,CAACsB,SAAZ,GAAwB;AACtB7F,EAAAA,WAAW,EAAE8F,SAAS,CAACC,OAAV,CAAkBD,SAAS,CAACE,MAA5B,EAAoCC,UAD3B;AAEtBpG,EAAAA,UAAU,EAAEiG,SAAS,CAACI,MAAV,CAAiBD,UAFP;AAGtBlD,EAAAA,OAAO,EAAE+C,SAAS,CAACK,IAAV,CAAeF,UAHF;AAItBlB,EAAAA,cAAc,EAAEe,SAAS,CAACK,IAAV,CAAeF,UAJT;AAKtBzB,EAAAA,YAAY,EAAEsB,SAAS,CAACK,IAAV,CAAeF,UALP;AAMtBtB,EAAAA,gBAAgB,EAAEmB,SAAS,CAACE,MANN;AAOtBpB,EAAAA,kBAAkB,EAAEkB,SAAS,CAACE,MAPR;AAQtBnB,EAAAA,gBAAgB,EAAEiB,SAAS,CAACE,MARN;AAStBlB,EAAAA,WAAW,EAAEgB,SAAS,CAACM,MAAV,CAAiBH,UATR;AAUtBxB,EAAAA,aAAa,EAAEqB,SAAS,CAACO,IAVH;AAWtB3B,EAAAA,kBAAkB,EAAEoB,SAAS,CAACO;AAXR,CAAxB;;ACjHA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAEC,eADS;AAElBC,EAAAA,OAAO,EAAEC,WAFS;AAGlBC,EAAAA,KAAK,EAAEC,SAHW;AAIlBC,EAAAA,IAAI,EAAEC;AAJY,CAApB;AAOA,IAAMzD,WAAS,GAAGC,UAAU,CAC1B,UAACnB,KAAD;AAAA,SAAY;AACVoE,IAAAA,OAAO,EAAE;AACP1C,MAAAA,eAAe,EAAE1B,KAAK,CAAC4E,OAAN,CAAcR,OAAd,CAAsBS;AADhC,KADC;AAIVL,IAAAA,KAAK,EAAE;AACL9C,MAAAA,eAAe,EAAE1B,KAAK,CAAC4E,OAAN,CAAcJ,KAAd,CAAoBK;AADhC,KAJG;AAOVH,IAAAA,IAAI,EAAE;AACJhD,MAAAA,eAAe,EAAE1B,KAAK,CAAC4E,OAAN,CAAcF,IAAd,CAAmBG;AADhC,KAPI;AAUVP,IAAAA,OAAO,EAAE;AACP5C,MAAAA,eAAe,EAAE1B,KAAK,CAAC4E,OAAN,CAAcN,OAAd,CAAsBO;AADhC,KAVC;AAaVvF,IAAAA,OAAO,EAAE;AACPwF,MAAAA,OAAO,EAAE,MADF;AAEPxD,MAAAA,UAAU,EAAE,QAFL;AAGP,iBAAW;AACTyD,QAAAA,WAAW,EAAE/E,KAAK,CAACoB,OAAN,CAAc,CAAd;AADJ;AAHJ,KAbC;AAoBVO,IAAAA,IAAI,EAAE;AACJqD,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KApBI;AAwBVC,IAAAA,WAAW,EAAE;AAxBH,GAAZ;AAAA,CAD0B,EA2B1B;AAAEhD,EAAAA,IAAI,EAAE;AAAR,CA3B0B,CAA5B;;AA8BA,SAASiD,sBAAT,OAMG;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJD9F,OAIC,QAJDA,OAIC;AAAA,MAHD+F,OAGC,QAHDA,OAGC;AAAA,MAFD9F,OAEC,QAFDA,OAEC;AAAA,MADE+F,KACF;;AACD,MAAMzC,OAAO,GAAG3B,WAAS,EAAzB;AACA,MAAMqE,IAAI,GAAGpB,WAAW,CAAC5E,OAAD,CAAxB;AAEA,sBACE4C,cAAC,eAAD;AACE,IAAA,SAAS,EAAEa,IAAI,CAACH,OAAO,CAACtD,OAAD,CAAR,EAAmB6F,SAAnB,CADjB;AAEE,wBAAiB,iBAFnB;AAGE,IAAA,OAAO,eACLjD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAA2B,MAAA,SAAS,EAAEU,OAAO,CAACvD;AAA9C,oBACE6C,cAAC,IAAD;AAAM,MAAA,SAAS,EAAEU,OAAO,CAAClB;AAAzB,MADF,EAEGrC,OAFH,CAJJ;AASE,IAAA,MAAM,EAAE,cACN6C,cAAC,UAAD;AACE,MAAA,GAAG,EAAC,OADN;AAEE,oBAAW,OAFb;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,SAAS,EAAEU,OAAO,CAACqC,WAJrB;AAKE,MAAA,OAAO,EAAEG;AALX,oBAOElD,cAAC,SAAD;AAAW,MAAA,SAAS,EAAEU,OAAO,CAAClB;AAA9B,MAPF,CADM;AATV,KAoBM2D,KApBN,EADF;AAwBD;;AAED,wCAAAH,sBAAsB,CAACzB,SAAvB,GAAmC;AACjC0B,EAAAA,SAAS,EAAEzB,SAAS,CAACM,MADY;AAEjC3E,EAAAA,OAAO,EAAEqE,SAAS,CAAC6B,IAFc;AAGjCH,EAAAA,OAAO,EAAE1B,SAAS,CAACK,IAHc;AAIjCzE,EAAAA,OAAO,EAAEoE,SAAS,CAAC8B,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,MAAhC,CAAhB,EAAyD3B;AAJjC,CAAnC;;ACnEA,IAAM5C,WAAS,GAAGC,YAAU,CAC1B;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYwD,OAAZ,QAAYA,OAAZ;AAAA,MAAqBc,KAArB,QAAqBA,KAArB;AAAA,SAAkC;AAChC,2BAAuB;AACrB,YAAM;AACJC,QAAAA,kBAAkB,EAAE;AADhB,OADe;AAIrB,cAAQ;AACNA,QAAAA,kBAAkB,EAAE;AADd;AAJa,KADS;AAShCtE,IAAAA,IAAI,EAAE;AACJyD,MAAAA,OAAO,EAAE,MADL;AAEJvD,MAAAA,QAAQ,EAAE,UAFN;AAGJP,MAAAA,KAAK,EAAE,MAHH;AAIJ4E,MAAAA,SAAS,EAAE,OAJP;AAKJlE,MAAAA,eAAe,EAAEkD,OAAO,CAACiB,UAAR,CAAmBC,KALhC;AAMJC,MAAAA,MAAM,EAAE,QANJ;AAOJC,MAAAA,WAAW,EAAEpB,OAAO,CAACqB,OAPjB;AAQJC,MAAAA,YAAY,EAAER,KAAK,CAACQ,YARhB;AASJC,MAAAA,SAAS,EAAE,YATP;AAUJC,MAAAA,MAAM,EAAE,SAVJ;AAWJC,MAAAA,QAAQ,EAAE,QAXN;AAYJC,MAAAA,aAAa,EAAE,QAZX;AAaJC,MAAAA,cAAc,EAAE;AAbZ,KAT0B;AAwBhCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE,yCADL;AAENC,MAAAA,eAAe,2DACP9B,OAAO,CAACiB,UAAR,CAAmBC,KADZ,4BAEPlB,OAAO,CAACiB,UAAR,CAAmBC,KAFZ,iCAGPlB,OAAO,CAACqB,OAHD,iCAIPrB,OAAO,CAACqB,OAJD,WAFT;AAONU,MAAAA,cAAc,EAAE,WAPV;AAQNZ,MAAAA,MAAM,EAAE,OARF;AASNC,MAAAA,WAAW,EAAEpB,OAAO,CAACgC,OAAR,CAAgBC;AATvB,KAxBwB;AAmChCC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,eAAe,2DACP9B,OAAO,CAACJ,KAAR,CAAcqC,KADP,4BAEPjC,OAAO,CAACJ,KAAR,CAAcqC,KAFP,iCAGPjC,OAAO,CAACJ,KAAR,CAAcuC,IAHP,iCAIPnC,OAAO,CAACJ,KAAR,CAAcuC,IAJP,WADR;AAMPf,MAAAA,WAAW,EAAEpB,OAAO,CAACJ,KAAR,CAAcK;AANpB,KAnCuB;AA2ChCmC,IAAAA,aAAa,EAAE;AACblC,MAAAA,OAAO,EAAE;AADI,KA3CiB;AA8ChCmC,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE9F,OAAO,CAAC,CAAD,CADjB;AAEJY,MAAAA,SAAS,EAAEZ,OAAO,CAAC,CAAD;AAFd,KA9C0B;AAkDhCO,IAAAA,IAAI,EAAE;AACJX,MAAAA,KAAK,EAAE,EADH;AAEJQ,MAAAA,MAAM,EAAE,EAFJ;AAGJI,MAAAA,KAAK,EAAEgD,OAAO,CAACqC,IAAR,CAAaL;AAHhB;AAlD0B,GAAlC;AAAA,CAD0B,EAyD1B;AAAE1E,EAAAA,IAAI,EAAE;AAAR,CAzD0B,CAA5B;;AA4DA,IAAMiF,eAAe,GAAG,SAAlBA,eAAkB,CAACC,aAAD,EAAgBC,YAAhB,EAAiC;AACvD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,aAAd,CAAL,EAAmC;AACjC,WAAO,IAAP;AACD;;AACD,SAAOA,aAAa,CAACI,QAAd,CAAuBH,YAAvB,CAAP;AACD,CALD;;AAOA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACzG,KAAD,EAAQtD,UAAR,EAAuB;AAC5C,MAAMgK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC3D,MAAD,EAAY;AACnC,QAAIA,MAAM,GAAGrG,UAAb,EAAyB;AACvB,aAAOqG,MAAP;AACD;;AACD,WAAOrG,UAAP;AACD,GALD;;AAOA,UAAQsD,KAAR;AACE,SAAK,IAAL;AACE,aAAO0G,gBAAgB,CAAC,CAAD,CAAvB;;AACF,SAAK,IAAL;AACE,aAAOA,gBAAgB,CAAC,CAAD,CAAvB;;AACF,SAAK,IAAL;AACE,aAAOA,gBAAgB,CAAC,CAAD,CAAvB;;AACF,SAAK,IAAL;AACE,aAAOA,gBAAgB,CAAC,CAAD,CAAvB;;AACF,SAAK,IAAL;AACE,aAAOA,gBAAgB,CAAC,CAAD,CAAvB;;AACF;AACE,aAAOA,gBAAgB,CAAC,CAAD,CAAvB;AAZJ;AAcD,CAtBD;;AAwBA,IAAMC,2BAA2B,GAAG;AAClCC,EAAAA,UAAU,EAAE,MADsB;AAElCC,EAAAA,QAAQ,EAAE;AAFwB,CAApC;;AAKA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAC/I,UAAD,EAAa8D,OAAb,EAAsBtH,OAAtB,EAA+BwM,WAA/B,EAA+C;AAC3E,MAAIxM,OAAJ,EAAa;AACX,wBAAO4G;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,SAAS,EAAEU,OAAO,CAACmF,KAA/B;AAAsC,MAAA,GAAG,EAAEjJ,UAAU,CAAC5C;AAAtD,MAAP;AACD;;AAED,sBACEgG,cAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEU,OAAO,CAAChB,WAAnC;AAAgD,IAAA,OAAO,EAAC;AAAxD,kBACEM,cAAC,cAAD;AACE,IAAA,SAAS,EAAEa,IAAI,CAACH,OAAO,CAACf,QAAT,EACaiG,WADb,IACZlF,OAAO,CAACZ,cADI;AADjB,IADF,CADF;AASD,CAdD;AAgBA;;;;;IAGMgG,gBAAgB,GAAG,SAAnBA,gBAAmB,QAgCnB;AAAA,MA/BJpK,WA+BI,SA/BJA,WA+BI;AAAA,MA9BJH,UA8BI,SA9BJA,UA8BI;AAAA,MA7BJwK,mBA6BI,SA7BJA,mBA6BI;AAAA,MA5BJC,yBA4BI,SA5BJA,yBA4BI;AAAA,MA3BJC,qBA2BI,SA3BJA,qBA2BI;AAAA,MA1BJC,oBA0BI,SA1BJA,oBA0BI;AAAA,MAzBJC,KAyBI,SAzBJA,KAyBI;AAAA,MAxBJlJ,OAwBI,SAxBJA,OAwBI;AAAA,MAvBJmJ,MAuBI,SAvBJA,MAuBI;AAAA,MAtBJC,cAsBI,SAtBJA,cAsBI;AAAA,MArBJ7K,QAqBI,SArBJA,QAqBI;AAAA,MApBJ8K,aAoBI,SApBJA,aAoBI;AAAA,MAnBJC,kBAmBI,SAnBJA,kBAmBI;AAAA,MAlBJC,wBAkBI,SAlBJA,wBAkBI;AAAA,MAjBJC,aAiBI,SAjBJA,aAiBI;AAAA,MAhBJC,sBAgBI,SAhBJA,sBAgBI;AAAA,MAfJC,aAeI,SAfJA,aAeI;AAAA,MAdJC,YAcI,SAdJA,YAcI;AAAA,MAbJnI,OAaI,SAbJA,OAaI;AAAA,MAZJgC,cAYI,SAZJA,cAYI;AAAA,MAXJ2C,IAWI,SAXJA,IAWI;AAAA,MAVJyD,UAUI,SAVJA,UAUI;AAAA,MATJC,WASI,SATJA,WASI;AAAA,MARJzG,gBAQI,SARJA,gBAQI;AAAA,MAPJC,kBAOI,SAPJA,kBAOI;AAAA,MANJC,gBAMI,SANJA,gBAMI;AAAA,MALJwG,WAKI,SALJA,WAKI;AAAA,MAJJvG,WAII,SAJJA,WAII;AAAA,MAHJwG,UAGI,SAHJA,UAGI;AAAA,MAFJ7G,aAEI,SAFJA,aAEI;AAAA,MADJC,kBACI,SADJA,kBACI;AACJ,MAAMM,OAAO,GAAG3B,WAAS,EAAzB;;AADI,qBASA/B,WAAW,CAACC,OAAD,CATX;AAAA,MAIFO,mBAJE,gBAIFA,mBAJE;AAAA,MAKFD,WALE,gBAKFA,WALE;AAAA,MAMFE,eANE,gBAMFA,eANE;AAAA,MAOFE,YAPE,gBAOFA,YAPE;AAAA,MAQFD,eARE,gBAQFA,eARE;;AAWJ,MAAMuJ,kBAAkB,GAAGpL,WAAW;AAAA,yEACpC,kBAAOqL,YAAP,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI5L,UAAU,GAAG,CAAb,IACAG,WAAW,CAACiF,MAAZ,GAAqBuG,YAAY,CAACvG,MAAlC,GAA2CpF,UAH/C;AAAA;AAAA;AAAA;;AAKU4B,cAAAA,OALV,GAKoB6I,yBAAyB,CAACzK,UAAD,CAL7C;AAMIgC,cAAAA,WAAW,CAACJ,OAAD,EAAU,OAAV,CAAX;AANJ;;AAAA;AAUE;AACA,kBAAIiJ,MAAJ,EAAY;AACVA,gBAAAA,MAAM,CAACc,YAAD,EAAeC,GAAf,CAAN;AACD,eAbH;;;AAAA;AAAA,qBAgByB5M,OAAO,CAACuB,GAAR,CACrBoL,YAAY,CAACnL,GAAb;AAAA,qFAAiB,iBAAO1C,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACIiB,QAAQ,CAACjB,IAAD,CADZ;;AAAA;AACTW,0BAAAA,IADS;AAAA,2DAER;AACLX,4BAAAA,IAAI,EAAJA,IADK;AAELW,4BAAAA,IAAI,EAAJA;AAFK,2BAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;;AAAA;AAAA;AAAA;AAAA,kBADqB,CAhBzB;;AAAA;AAgBQiC,cAAAA,QAhBR;;AA0BE;AACA,kBAAIkK,KAAJ,EAAW;AACTA,gBAAAA,KAAK,CAAClK,QAAD,CAAL;AACD;;AAEKmL,cAAAA,cA/BR,GA+ByBnL,QAAQ,CAACiC,MAAT,CACrB,UAACmJ,GAAD,EAAMC,OAAN;AAAA,uBAAkBD,GAAG,GAAGtB,mBAAmB,CAACuB,OAAO,CAACjO,IAAR,CAAa0G,IAAd,CAA3C;AAAA,eADqB,EAErB,EAFqB,CA/BzB;AAmCExC,cAAAA,WAAW,CAAC6J,cAAD,EAAiB,SAAjB,CAAX;;AAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADoC;;AAAA;AAAA;AAAA;AAAA,OAsCpC,CACE7L,UADF,EAEEG,WAAW,CAACiF,MAFd,EAGEyF,MAHF,EAIED,KAJF,EAKE5I,WALF,EAMEyI,yBANF,EAOED,mBAPF,CAtCoC,CAAtC;AAiDA,MAAMwB,kBAAkB,GAAG1L,WAAW,CACpC,UAAC2L,aAAD,EAAgBL,GAAhB,EAAwB;AACtB,QAAIhK,OAAO,GAAG,EAAd;AACAqK,IAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,YAAD,EAAkB;AACtCvK,MAAAA,OAAO,GAAG+I,oBAAoB,CAC5BwB,YAD4B,EAE5BpB,aAF4B,EAG5BQ,WAH4B,CAA9B;AAKD,KAND;;AAQA,QAAIT,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACmB,aAAD,EAAgBL,GAAhB,CAAd;AACD;;AACD5J,IAAAA,WAAW,CAACJ,OAAD,EAAU,OAAV,CAAX;AACD,GAfmC,EAgBpC,CACEmJ,aADF,EAEEJ,oBAFF,EAGEY,WAHF,EAIET,cAJF,EAKE9I,WALF,CAhBoC,CAAtC;AAyBA,MAAM2C,YAAY,GAAGrE,WAAW,CAC9B,UAAC8L,SAAD;AAAA,WAAe,UAAC9M,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAAC+M,eAAN,GADwB;;AAIxB,UAAMpL,cAAc,GAAGd,WAAW,CAACiM,SAAD,CAAlC,CAJwB;;AAOxB,UAAInM,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACgB,cAAD,EAAiBmL,SAAjB,CAAR;AACD;;AACD,UAAMxK,OAAO,GAAG8I,qBAAqB,CAACzJ,cAAc,CAACnD,IAAf,CAAoB0G,IAArB,CAArC;AACAxC,MAAAA,WAAW,CAACJ,OAAD,EAAU,MAAV,CAAX;AACD,KAZD;AAAA,GAD8B,EAc9B,CAACzB,WAAD,EAAcF,QAAd,EAAwByK,qBAAxB,EAA+C1I,WAA/C,CAd8B,CAAhC;AAiBA,MAAMsK,WAAW,GAAGvB,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEwB,IAAf,CAAoB,GAApB,CAApB;AACA,MAAMC,UAAU,GAAGxM,UAAU,GAAG,CAAhC;AACA,MAAMyM,SAAS,GAAGtM,WAAW,CAACiF,MAAZ,GAAqB,CAAvC;AAEA,MAAMsH,aAAa,GAChB,OAAOjB,UAAP,KAAsB,SAAtB,IAAmCA,UAApC,IACA7B,KAAK,CAACC,OAAN,CAAc4B,UAAd,CAFF;AAGA,MAAMkB,WAAW,GACfvK,YAAY,IAAIqH,eAAe,CAACgC,UAAD,EAAatJ,eAAb,CADjC;;AA7GI,2BA8JQsC,cAAC,WAAD;AACE,IAAA,WAAW,EAAEtE,WADf;AAEE,IAAA,UAAU,EAAEH,UAFd;AAGE,IAAA,OAAO,EAAEkD,OAHX;AAIE,IAAA,YAAY,EAAEyB,YAJhB;AAKE,IAAA,cAAc,EAAEO,cALlB;AAME,IAAA,aAAa,EAAEN,aANjB;AAOE,IAAA,kBAAkB,EAAEC,kBAPtB;AAQE,IAAA,gBAAgB,EAAEC,gBARpB;AASE,IAAA,kBAAkB,EAAEC,kBATtB;AAUE,IAAA,gBAAgB,EAAEC,gBAVpB;AAWE,IAAA,WAAW,EAAEC;AAXf,IA9JR;;AAgHJ,sBACER,2CACEA,cAAC,QAAD,eACM2G,aADN;AAEE,IAAA,MAAM,EAAEkB,WAFV;AAGE,IAAA,cAAc,EAAEZ,kBAHlB;AAIE,IAAA,cAAc,EAAEM,kBAJlB;AAKE,IAAA,OAAO,EAAET,WALX;AAME,IAAA,QAAQ,EAAEiB;AANZ,MAQG;AAAA,QAAGI,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,QAAgCC,YAAhC,SAAgCA,YAAhC;AAAA,QAA8CC,YAA9C,SAA8CA,YAA9C;AAAA,wBACCtI,qBACMmI,YAAY,CAAC;AACflF,MAAAA,SAAS,EAAEpC,IAAI,CACbH,OAAO,CAACxB,IADK,EAEbuH,aAFa,EAGb4B,YAHa,IAGG3H,OAAO,CAAC2D,MAHX,EAIb,CAACmC,wBAJY,IAIgB8B,YAJhB,IAIgC5H,OAAO,CAACiE,OAJxC;AADA,KAAD,CADlB,eAUE3E,uBAAWoI,aAAa,CAACvB,UAAD,CAAxB,CAVF,eAYE7G,cAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAEU,OAAO,CAACmE,aAFrB;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,OAAO,EAAC,QAJV;AAKE,MAAA,UAAU,EAAC;AALb,oBAOE7E,cAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,SAAS,EAAC,GAFZ;AAGE,MAAA,SAAS,EAAEa,IAAI,CAACH,OAAO,CAACoE,IAAT,EAAe4B,sBAAf;AAHjB,OAKGE,YALH,CAPF,EAeGxD,IAAI,gBACHpD,cAAC,IAAD;AAAM,MAAA,SAAS,EAAEU,OAAO,CAAClB;AAAzB,MADG,gBAGHQ,cAAC,eAAD;AAAiB,MAAA,SAAS,EAAEU,OAAO,CAAClB;AAApC,MAlBJ,CAZF,EAkCGwI,SAAS,IAAIxH,WAAW,KAAK,QAA7B,WAcG,IAhDN,CADD;AAAA,GARH,CADF,EA+DGwH,SAAS,IAAIxH,WAAW,KAAK,OAA7B,gBACCR,2CACEA,cAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAC;AAA1C,KACG+G,WADH,CADF,eAKE/G,cAAC,WAAD;AACE,IAAA,WAAW,EAAEtE,WADf;AAEE,IAAA,UAAU,EAAEH,UAFd;AAGE,IAAA,OAAO,EAAEkD,OAHX;AAIE,IAAA,YAAY,EAAEyB,YAJhB;AAKE,IAAA,cAAc,EAAEO,cALlB;AAME,IAAA,aAAa,EAAEN,aANjB;AAOE,IAAA,kBAAkB,EAAEC,kBAPtB;AAQE,IAAA,gBAAgB,EAAEC,gBARpB;AASE,IAAA,kBAAkB,EAAEC,kBATtB;AAUE,IAAA,gBAAgB,EAAEC,gBAVpB;AAWE,IAAA,WAAW,EAAEC;AAXf,IALF,CADD,GAoBG,IAnFN,EAqFGyH,aAAa,gBACZjI,cAAC,QAAD;AACE,IAAA,YAAY,EAAEwF,2BADhB;AAEE,IAAA,gBAAgB,EAAE;AAFpB,KAGMe,kBAHN;AAIE,IAAA,IAAI,EAAE2B,WAJR;AAKE,IAAA,OAAO,EAAE1K;AALX,mBAOEwC,cAAC,sBAAD;AACE,IAAA,OAAO,EAAExC,mBADX;AAEE,IAAA,OAAO,EAAEE,eAFX;AAGE,IAAA,OAAO,EAAED;AAHX,IAPF,CADY,GAcV,IAnGN,CADF;AAuGD;;AAEDqI,gBAAgB,CAACyC,YAAjB,GAAgC;AAC9BjC,EAAAA,aAAa,EAAE,EADe;AAE9B/K,EAAAA,UAAU,EAAE,CAFkB;AAG9BG,EAAAA,WAAW,EAAE,EAHiB;AAI9BoL,EAAAA,WAAW,EAAE,OAJiB;AAK9BF,EAAAA,YAAY,EAAE,oCALgB;AAM9BG,EAAAA,WAAW,EAAE,UANiB;AAO9BvG,EAAAA,WAAW,EAAE,QAPiB;AAQ9BgG,EAAAA,wBAAwB,EAAE,KARI;AAS9BrG,EAAAA,aAAa,EAAE,IATe;AAU9BC,EAAAA,kBAAkB,EAAE,KAVU;AAW9BC,EAAAA,gBAAgB,EAAE,EAXY;AAY9BC,EAAAA,kBAAkB,EAAE,EAZU;AAa9BC,EAAAA,gBAAgB,EAAE,EAbY;AAc9ByG,EAAAA,UAAU,EAAE,IAdkB;AAe9BT,EAAAA,kBAAkB,EAAE;AAClBiC,IAAAA,YAAY,EAAE;AACZ/C,MAAAA,UAAU,EAAE,MADA;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KADI;AAKlB+C,IAAAA,gBAAgB,EAAE;AALA,GAfU;AAsB9BhK,EAAAA,OAAO,EAAE6G,cAtBqB;AAuB9BU,EAAAA,yBAAyB,EAAE,mCAACzK,UAAD;AAAA,oEACyBA,UADzB;AAAA,GAvBG;AAyB9BwK,EAAAA,mBAAmB,EAAE,6BAAC2C,QAAD;AAAA,0BAAsBA,QAAtB;AAAA,GAzBS;AA0B9BjI,EAAAA,cAAc,EAAEkF,qBA1Bc;AA2B9BM,EAAAA,qBAAqB,EAAE,+BAACyC,QAAD;AAAA,0BAAsBA,QAAtB;AAAA,GA3BO;AA4B9BxC,EAAAA,oBAAoB,EAAE,8BAACwB,YAAD,EAAepB,aAAf,EAA8BQ,WAA9B,EAA8C;AAClE,QAAI3J,OAAO,kBAAWuK,YAAY,CAAC3H,IAAxB,oBAAX;;AACA,QAAI,CAACuG,aAAa,CAACjB,QAAd,CAAuBqC,YAAY,CAACpO,IAApC,CAAL,EAAgD;AAC9C6D,MAAAA,OAAO,IAAI,2BAAX;AACD;;AACD,QAAIuK,YAAY,CAAChO,IAAb,GAAoBoN,WAAxB,EAAqC;AACnC3J,MAAAA,OAAO,6CAAsC3D,sBAAsB,CACjEsN,WADiE,CAA5D,OAAP;AAGD;;AACD,WAAO3J,OAAP;AACD;AAvC6B,CAAhC;AA0CO,IAAMwL,eAAe,GAAGnH,SAAS,CAAC+B,KAAV,CAAgB;AAC7ClK,EAAAA,IAAI,EAAEmI,SAAS,CAACE,MAD6B;AAE7C1H,EAAAA,IAAI,EAAEwH,SAAS,CAACoH;AAF6B,CAAhB,CAAxB;AAKP,wCAAA9C,gBAAgB,CAACvE,SAAjB,GAA6B;AAC3B;;;AAGA+E,EAAAA,aAAa,EAAE9E,SAAS,CAACC,OAAV,CAAkBD,SAAS,CAACM,MAA5B,CAJY;;AAK3B;AACAvG,EAAAA,UAAU,EAAEiG,SAAS,CAACI,MANK;;AAO3B;AACAwB,EAAAA,IAAI,EAAE5B,SAAS,CAACqH,WARW;;AAS3B;AACAnN,EAAAA,WAAW,EAAE8F,SAAS,CAACC,OAAV,CAAkBkH,eAAlB,CAVc;;AAW3B;AACA7B,EAAAA,WAAW,EAAEtF,SAAS,CAACI,MAZI;;AAa3B;AACAgF,EAAAA,YAAY,EAAEpF,SAAS,CAACM,MAdG;;AAe3B;AACA2E,EAAAA,aAAa,EAAEjF,SAAS,CAACM,MAhBE;;AAiB3B;AACA4E,EAAAA,sBAAsB,EAAElF,SAAS,CAACM,MAlBP;;AAmB3B;AACA0E,EAAAA,wBAAwB,EAAEhF,SAAS,CAACO,IApBT;;AAqB3B;AACA5B,EAAAA,aAAa,EAAEqB,SAAS,CAACO,IAtBE;;AAuB3B;AACA3B,EAAAA,kBAAkB,EAAEoB,SAAS,CAACO,IAxBH;;AAyB3B;;;;;AAKA1B,EAAAA,gBAAgB,EAAEmB,SAAS,CAACE,MA9BD;;AA+B3B;;;;AAIApB,EAAAA,kBAAkB,EAAEkB,SAAS,CAACE,MAnCH;;AAoC3B;;;;;;AAMAnB,EAAAA,gBAAgB,EAAEiB,SAAS,CAACE,MA1CD;;AA2C3B;AACAqF,EAAAA,WAAW,EAAEvF,SAAS,CAACM,MA5CI;;AA6C3B;AACAtB,EAAAA,WAAW,EAAEgB,SAAS,CAAC8B,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAhB,CA9Cc;;AA+C3B;;;;;;;;;;AAUA0D,EAAAA,UAAU,EAAExF,SAAS,CAACsH,SAAV,CAAoB,CAC9BtH,SAAS,CAACO,IADoB,EAE9BP,SAAS,CAACC,OAAV,CAAkBD,SAAS,CAAC8B,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,CAAhB,CAAlB,CAF8B,CAApB,CAzDe;;AA6D3B;;;;;AAKAiD,EAAAA,kBAAkB,EAAE/E,SAAS,CAACE,MAlEH;;AAmE3B;;;;;AAKAiF,EAAAA,aAAa,EAAEnF,SAAS,CAACE,MAxEE;;AAyE3B;;;;;AAKAmF,EAAAA,UAAU,EAAErF,SAAS,CAACE,MA9EK;;AA+E3B;;;;;;;;;AASAjD,EAAAA,OAAO,EAAE+C,SAAS,CAACK,IAxFQ;;AAyF3B;;;;;;;AAOAmE,EAAAA,yBAAyB,EAAExE,SAAS,CAACK,IAhGV;;AAiG3B;;;;;;;AAOAkE,EAAAA,mBAAmB,EAAEvE,SAAS,CAACK,IAxGJ;;AAyG3B;;;;;;;AAOAoE,EAAAA,qBAAqB,EAAEzE,SAAS,CAACK,IAhHN;;AAiH3B;;;;;;;;;AASAqE,EAAAA,oBAAoB,EAAE1E,SAAS,CAACK,IA1HL;;AA2H3B;;;;;;;;AAQApB,EAAAA,cAAc,EAAEe,SAAS,CAACK,IAnIC;;AAoI3B;;;;;AAKAsE,EAAAA,KAAK,EAAE3E,SAAS,CAACK,IAzIU;;AA0I3B;;;;;;AAMA5E,EAAAA,OAAO,EAAEuE,SAAS,CAACK,IAhJQ;;AAiJ3B;;;;;;AAMArG,EAAAA,QAAQ,EAAEgG,SAAS,CAACK,IAvJO;;AAwJ3B;;;;;;AAMAuE,EAAAA,MAAM,EAAE5E,SAAS,CAACK,IA9JS;;AA+J3B;;;;;;AAMAwE,EAAAA,cAAc,EAAE7E,SAAS,CAACK;AArKC,CAA7B;;ACtaA;;;;;;;;IAQMkH,YAAY,GAAG,SAAfA,YAAe,OAOf;AAAA,MANJ1N,cAMI,QANJA,cAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJF,QAII,QAJJA,QAII;AAAA,MAHJI,QAGI,QAHJA,QAGI;AAAA,MAFJD,UAEI,QAFJA,UAEI;AAAA,MADDyN,qBACC;;AAAA,kBACsD7N,QAAQ,CAAC;AACjEC,IAAAA,QAAQ,EAARA,QADiE;AAEjEC,IAAAA,cAAc,EAAdA,cAFiE;AAGjEC,IAAAA,YAAY,EAAZA,YAHiE;AAIjEC,IAAAA,UAAU,EAAVA,UAJiE;AAKjEC,IAAAA,QAAQ,EAARA;AALiE,GAAD,CAD9D;AAAA,MACIe,gBADJ,aACIA,gBADJ;AAAA,MACsBF,cADtB,aACsBA,cADtB;AAAA,MACsCX,WADtC,aACsCA,WADtC;;AASJ,sBACEsE,cAAC,gBAAD,eACMgJ,qBADN;AAEE,IAAA,WAAW,EAAEtN,WAFf;AAGE,IAAA,KAAK,EAAEW,cAHT;AAIE,IAAA,QAAQ,EAAEE;AAJZ,KADF;AAQD;;AAEDwM,YAAY,CAACR,YAAb,GAA4B;AAC1BlN,EAAAA,cAAc,EAAE,IADU;AAE1BE,EAAAA,UAAU,EAAE,CAFc;AAG1BD,EAAAA,YAAY,EAAE;AAHY,CAA5B;AAMA,wCAAAyN,YAAY,CAACxH,SAAb,gBACKuE,gBAAgB,CAACvE,SADtB;AAEE;AACAlG,EAAAA,cAAc,EAAEmG,SAAS,CAACO,IAH5B;;AAIE;;;AAGAzG,EAAAA,YAAY,EAAEkG,SAAS,CAACC,OAAV,CACZD,SAAS,CAACsH,SAAV,CAAoB,CAACtH,SAAS,CAACM,MAAX,EAAmBN,SAAS,CAACoH,GAA7B,CAApB,CADY,CAPhB;;AAUE;AACArN,EAAAA,UAAU,EAAEiG,SAAS,CAACI,MAXxB;;AAYE;;;;;AAKAxG,EAAAA,QAAQ,EAAEoG,SAAS,CAACK,IAjBtB;;AAkBE;;;;;AAKArG,EAAAA,QAAQ,EAAEgG,SAAS,CAACK;AAvBtB;;ACrCA;;;;;;IAKMoH,kBAAkB,GAAG,SAArBA,kBAAqB,OAWrB;AAAA,MAVJC,gBAUI,QAVJA,gBAUI;AAAA,MATJC,WASI,QATJA,WASI;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJpG,OAKI,QALJA,OAKI;AAAA,MAJJqG,MAII,QAJJA,MAII;AAAA,MAHJrM,IAGI,QAHJA,IAGI;AAAA,MAFJsM,gBAEI,QAFJA,gBAEI;AAAA,MADDC,iBACC;;AACJ;AACA,MAAMC,cAAc,GAAGD,iBAAiB,CAAC/N,WAAlB,CAA8BiF,MAA9B,KAAyC,CAAhE;AAEA,sBACEX,cAAC,MAAD;AACE,IAAA,gBAAgB,EAAEkJ,gBADpB;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAKE,IAAA,OAAO,EAAEpG,OALX;AAME,IAAA,MAAM,EAAEqG,MANV;AAOE,IAAA,IAAI,EAAErM,IAPR;AAQE,IAAA,SAAS,EAAEmM,SARb;AASE,IAAA,WAAW,EAAEI,iBAAiB,CAAC/N;AATjC,kBAWEsE,cAAC,WAAD,QAAcoJ,WAAd,CAXF,eAaEpJ,cAAC,aAAD,qBACEA,cAAC,gBAAD,EAAsByJ,iBAAtB,CADF,CAbF,eAiBEzJ,cAAC,aAAD,qBACEA,cAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEkD;AAAjC,KACGgG,gBADH,CADF,eAKElJ,cAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,QAAQ,EAAE0J,cAAlC;AAAkD,IAAA,OAAO,EAAEH;AAA3D,KACGC,gBADH,CALF,CAjBF,CADF;AA6BD;;AAEDP,kBAAkB,CAACV,YAAnB,GAAkC;AAChCrL,EAAAA,IAAI,EAAE,KAD0B;AAEhCkM,EAAAA,WAAW,EAAE,aAFmB;AAGhCD,EAAAA,WAAW,EAAE,EAHmB;AAIhCE,EAAAA,SAAS,EAAE,IAJqB;AAKhCC,EAAAA,QAAQ,EAAE,IALsB;AAMhCJ,EAAAA,gBAAgB,EAAE,QANc;AAOhCM,EAAAA,gBAAgB,EAAE,QAPc;AAQhCG,EAAAA,YAAY,EAAE,IARkB;AAShCC,EAAAA,sBAAsB,EAAE,KATQ;AAUhCC,EAAAA,sBAAsB,EAAE;AAVQ,CAAlC;AAaA,wCAAAZ,kBAAkB,CAAC1H,SAAnB,gBACKuE,gBAAgB,CAACvE,SADtB;AAEE;AACArE,EAAAA,IAAI,EAAEsE,SAAS,CAACO,IAHlB;;AAIE;AACAqH,EAAAA,WAAW,EAAE5H,SAAS,CAACM,MALzB;;AAME;;;;AAIAqH,EAAAA,WAAW,EAAE3H,SAAS,CAACE,MAVzB;;AAWE;;;;AAIA2H,EAAAA,SAAS,EAAE7H,SAAS,CAACO,IAfvB;;AAgBE;;;;AAIAuH,EAAAA,QAAQ,EAAE9H,SAAS,CAACM,MApBtB;;AAqBE;AACAoH,EAAAA,gBAAgB,EAAE1H,SAAS,CAACM,MAtB9B;;AAuBE;AACA0H,EAAAA,gBAAgB,EAAEhI,SAAS,CAACM,MAxB9B;;AAyBE;;;;;AAKAoB,EAAAA,OAAO,EAAE1B,SAAS,CAACK,IA9BrB;;AA+BE;;;;;AAKA0H,EAAAA,MAAM,EAAE/H,SAAS,CAACK,IApCpB;;AAqCE;;;;AAIA8H,EAAAA,YAAY,EAAEnI,SAAS,CAACO,IAzC1B;;AA0CE;AACA6H,EAAAA,sBAAsB,EAAEpI,SAAS,CAACO,IA3CpC;;AA4CE;AACA8H,EAAAA,sBAAsB,EAAErI,SAAS,CAACO;AA7CpC;;ACnEA;;;;;;;;IAOM+H,cAAc,GAAG,SAAjBA,cAAiB,OASjB;AAAA,MARJzO,cAQI,QARJA,cAQI;AAAA,MAPJ6H,OAOI,QAPJA,OAOI;AAAA,MANJqG,MAMI,QANJA,MAMI;AAAA,MALJjO,YAKI,QALJA,YAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJJ,QAEI,QAFJA,QAEI;AAAA,MADD+H,KACC;;AAAA,kBAMAhI,QAAQ,CAAC;AACXC,IAAAA,QAAQ,EAARA,QADW;AAEXC,IAAAA,cAAc,EAAdA,cAFW;AAGXC,IAAAA,YAAY,EAAZA,YAHW;AAIXC,IAAAA,UAAU,EAAVA,UAJW;AAKXC,IAAAA,QAAQ,EAARA;AALW,GAAD,CANR;AAAA,MAEFe,gBAFE,aAEFA,gBAFE;AAAA,MAGFF,cAHE,aAGFA,cAHE;AAAA,MAIFX,WAJE,aAIFA,WAJE;AAAA,MAKFoB,gBALE,aAKFA,gBALE;;AAcJ,MAAMiN,WAAW,GAAG,SAAdA,WAAc,CAAC5C,GAAD,EAAS;AAC3B,QAAIjE,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACiE,GAAD,CAAP;AACD;AACF,GAJD;;AAMA,MAAM6C,UAAU,GAAG,SAAbA,UAAa,CAAC7C,GAAD,EAAS;AAC1B,QAAIoC,MAAJ,EAAY;AACVA,MAAAA,MAAM,CACJ7N,WAAW,CAACK,GAAZ,CAAgB,UAACa,UAAD;AAAA,eAAgBA,UAAU,CAACvD,IAA3B;AAAA,OAAhB,CADI,EAEJ8N,GAFI,CAAN;AAID;;AAED,QAAI9L,cAAJ,EAAoB;AAClByB,MAAAA,gBAAgB;AACjB;AACF,GAXD;;AAaA,sBACEkD,cAAC,kBAAD;AACE,IAAA,cAAc,EAAE3E,cADlB;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,QAAQ,EAAEH,QAJZ;AAKE,IAAA,WAAW,EAAEM,WALf;AAME,IAAA,KAAK,EAAEW,cANT;AAOE,IAAA,QAAQ,EAAEE,gBAPZ;AAQE,IAAA,OAAO,EAAEwN,WARX;AASE,IAAA,MAAM,EAAEC;AATV,KAUM7G,KAVN,EADF;AAcD;;AAED2G,cAAc,CAACvB,YAAf,GAA8B;AAC5BlN,EAAAA,cAAc,EAAE,IADY;AAE5BE,EAAAA,UAAU,EAAE,CAFgB;AAG5BD,EAAAA,YAAY,EAAE;AAHc,CAA9B;AAMA,wCAAAwO,cAAc,CAACvI,SAAf,gBACK0H,kBAAkB,CAAC1H,SADxB;AAEE;AACAlG,EAAAA,cAAc,EAAEmG,SAAS,CAACO,IAH5B;;AAIE;AACAxG,EAAAA,UAAU,EAAEiG,SAAS,CAACI,MALxB;;AAME;;;AAGAtG,EAAAA,YAAY,EAAEkG,SAAS,CAACC,OAAV,CACZD,SAAS,CAACsH,SAAV,CAAoB,CAACtH,SAAS,CAACM,MAAX,EAAmBN,SAAS,CAACoH,GAA7B,CAApB,CADY,CAThB;;AAYE;;;;;;AAMAW,EAAAA,MAAM,EAAE/H,SAAS,CAACK;AAlBpB;;;;"}