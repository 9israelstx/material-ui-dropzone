{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/hooks/useFiles.js","../src/hooks/useSnackbar.js","../src/hooks/useWidth.js","../src/hooks/useColumns.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\n  if (file.type.split('/')[0] === 'image') {\n    return true;\n  }\n  return false;\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n  let size = '';\n  // I know, not technically correct...\n  if (filesize >= 1000000) {\n    size = `${filesize / 1000000} megabytes`;\n  } else if (filesize >= 1000) {\n    size = `${filesize / 1000} kilobytes`;\n  } else {\n    size = `${filesize} bytes`;\n  }\n  return size;\n}\n\nexport async function createFileFromUrl(url) {\n  const response = await fetch(url);\n  const data = await response.blob();\n  const metadata = { type: data.type };\n  const filename = url.replace(/\\?.+/, '').split('/').pop();\n  return new File([data], filename, metadata);\n}\n\nexport function readFile(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      resolve(event?.target?.result);\n    };\n    reader.onerror = (event) => {\n      reader.abort();\n      reject(event);\n    };\n    reader.readAsDataURL(file);\n  });\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { createFileFromUrl, readFile } from '../helpers';\n\n/**\n * holds files in its state and provides some handler methods to add and remove from that state\n */\nconst useFiles = ({\n  onChange,\n  clearOnUnmount,\n  initialFiles,\n  filesLimit,\n  onDelete,\n}) => {\n  const [fileObjects, setFileObjects] = useState([]);\n\n  const loadInitialFiles = useCallback(async () => {\n    try {\n      const fileObjs = await Promise.all(\n        initialFiles.map(async (initialFile) => {\n          let file;\n          if (typeof initialFile === 'string') {\n            file = await createFileFromUrl(initialFile);\n          } else {\n            file = initialFile;\n          }\n          const data = await readFile(file);\n\n          return {\n            file,\n            data,\n          };\n        }),\n      );\n\n      setFileObjects((prev) => [...prev, ...fileObjs]);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [initialFiles]);\n\n  const handleAddFiles = useCallback(\n    (newFileObjects) => {\n      // Update component state\n      setFileObjects((prev) => {\n        if (filesLimit <= 1) {\n          return [newFileObjects[0]];\n        }\n\n        return [...prev, ...newFileObjects];\n      });\n    },\n    [filesLimit],\n  );\n\n  const handleDeleteFile = useCallback(\n    (removedFileObj, removedFileObjIdx) => {\n      // Calculate remaining fileObjects array\n      const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n        return i !== removedFileObjIdx;\n      });\n\n      // Notify removed file\n      if (onDelete) {\n        onDelete(removedFileObj.file);\n      }\n\n      // Update local state\n      setFileObjects(remainingFileObjs);\n    },\n    [onDelete, fileObjects],\n  );\n\n  const handleResetFiles = () => setFileObjects([]);\n\n  // When the fileObjects change, fire the onChange method if it's defined\n  useEffect(() => {\n    if (onChange) {\n      onChange(fileObjects.map((fileObject) => fileObject.file));\n    }\n  }, [fileObjects, onChange]);\n\n  // Initialize the files when the hook is loaded\n  useEffect(() => {\n    loadInitialFiles();\n\n    return () => {\n      if (clearOnUnmount) {\n        setFileObjects([]);\n      }\n    };\n  }, [clearOnUnmount, loadInitialFiles]);\n\n  return {\n    handleAddFiles,\n    handleDeleteFile,\n    handleResetFiles,\n    fileObjects,\n  };\n};\n\nexport default useFiles;\n","import { useCallback, useState } from 'react';\n\n/**\n * Holds state required to utilize the snackbar and provides handlers to send messages via the snackbar\n */\nconst useSnackbar = (onAlert) => {\n  const [state, setState] = useState({\n    open: false,\n    message: '',\n    variant: 'success',\n  });\n\n  const sendMessage = useCallback(\n    (message, variant) => {\n      setState({\n        open: true,\n        message,\n        variant,\n      });\n\n      if (onAlert) {\n        onAlert(message, variant);\n      }\n    },\n    [onAlert],\n  );\n\n  const handleCloseSnackbar = useCallback(() => {\n    setState((prev) => ({ ...prev, open: false }));\n  }, []);\n\n  return {\n    handleCloseSnackbar,\n    sendMessage,\n    snackbarMessage: state.message,\n    snackbarVariant: state.variant,\n    snackbarOpen: state.open,\n  };\n};\n\nexport default useSnackbar;\n","import { useTheme } from '@material-ui/core/styles';\nimport matchMediaQuery from '@material-ui/core/useMediaQuery';\n\n/**\n * Returns xs,sm,md,lg or xl depending on the screenSize\n * @see https://material-ui.com/components/use-media-query/#migrating-from-withwidth\n */\nconst useWidth = () => {\n  const theme = useTheme();\n  const keys = [...theme.breakpoints.keys].reverse();\n  return (\n    keys.reduce((output, key) => {\n      const matches = matchMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null) || 'xs'\n  );\n};\n\nexport default useWidth;\n","import { useEffect, useState } from 'react';\n\nimport useWidth from './useWidth';\n\n/**\n * Calculates the number of columns to use in the preview based on a function passed in\n * numberOfColumns is a state variable which will update every time the width of the\n * screen changes\n */\nconst useColumns = (getCols, filesLimit, numberOfFileObjects) => {\n  const [numberOfColumns, setCols] = useState(1);\n  const width = useWidth();\n\n  useEffect(() => {\n    const cols = getCols(width, filesLimit, numberOfFileObjects);\n    setCols(cols);\n  }, [filesLimit, getCols, numberOfFileObjects, width]);\n\n  return numberOfColumns;\n};\n\nexport default useColumns;\n","import Chip from '@material-ui/core/Chip';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PreviewIcon from '@material-ui/icons/Visibility';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { isImage as isImageCheck } from '../helpers';\nimport useColumns from '../hooks/useColumns';\n\nconst useStyles = makeStyles(\n  ({ spacing }) => ({\n    root: {\n      alignItems: 'center',\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      margin: 0,\n      backgroundColor: 'rgba(255,255,255,0.87)',\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n    iconWrapper: {\n      height: '100%',\n      backgroundColor: '#f2f2f2',\n    },\n    fileIcon: {\n      flexGrow: 1,\n      height: '50%',\n      marginTop: spacing(3),\n    },\n    fileIconBottom: {\n      marginTop: spacing(9),\n    },\n  }),\n  { name: 'MuiDropzonePreviewList' },\n);\n\nconst PreviewList = ({\n  fileObjects,\n  filesLimit,\n  getCols,\n  handleRemove,\n  showFileNames,\n  useChipsForPreview,\n  previewChipProps,\n  previewGridClasses,\n  previewGridProps,\n  previewType,\n  getPreviewIcon,\n  handlePreviewClick,\n}) => {\n  const classes = useStyles();\n  const cols = useColumns(getCols, filesLimit, fileObjects.length);\n  const previewInside = previewType === 'inside';\n\n  if (useChipsForPreview) {\n    return fileObjects.map((fileObject, i) => (\n      <div key={i}>\n        <Chip\n          variant=\"outlined\"\n          {...previewChipProps}\n          label={fileObject.file.name}\n          onDelete={handleRemove(i)}\n        />\n      </div>\n    ));\n  }\n\n  return (\n    <GridList\n      cols={cols}\n      className={clsx(\n        { [classes.root]: previewInside },\n        previewGridClasses.container,\n      )}\n      {...previewGridProps?.gridList}\n    >\n      {fileObjects.map((fileObject, i) => {\n        const fileTitle = showFileNames && fileObject.file?.name;\n        const isImage = isImageCheck(fileObject.file);\n\n        return (\n          <GridListTile\n            key={`${fileObject.file?.name ?? 'file'}-${i}`}\n            className={clsx(previewGridClasses.gridListTile, {\n              [classes.iconWrapper]: !isImage,\n            })}\n            onClick={handlePreviewClick(i)}\n            onKeyDown={handlePreviewClick(i)}\n            {...previewGridProps?.gridListTitle}\n          >\n            {getPreviewIcon(\n              fileObject,\n              classes,\n              isImage,\n              previewGridProps?.gridListTitleBar?.titlePosition === 'top',\n            )}\n\n            <GridListTileBar\n              title={fileTitle}\n              actionIcon={\n                <IconButton\n                  onClick={handleRemove(i)}\n                  aria-label=\"Delete\"\n                  className={clsx(\n                    previewGridClasses.removeIconButton,\n                    classes.icon,\n                  )}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              }\n              {...previewGridProps?.gridListTitleBar}\n            />\n          </GridListTile>\n        );\n      })}\n    </GridList>\n  );\n};\n\nPreviewList.propTypes = {\n  fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filesLimit: PropTypes.number.isRequired,\n  getCols: PropTypes.func.isRequired,\n  getPreviewIcon: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  handlePreviewClick: PropTypes.func.isRequired,\n  previewChipProps: PropTypes.object,\n  previewGridClasses: PropTypes.object,\n  previewGridProps: PropTypes.object,\n  previewType: PropTypes.string.isRequired,\n  showFileNames: PropTypes.bool,\n  useChipsForPreview: PropTypes.bool,\n};\n\nexport default PreviewList;\n","import IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles = makeStyles(\n  (theme) => ({\n    success: {\n      backgroundColor: theme.palette.success.main,\n    },\n    error: {\n      backgroundColor: theme.palette.error.main,\n    },\n    info: {\n      backgroundColor: theme.palette.info.main,\n    },\n    warning: {\n      backgroundColor: theme.palette.warning.main,\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n      '& > svg': {\n        marginRight: theme.spacing(1),\n      },\n    },\n    icon: {\n      fontSize: 20,\n      opacity: 0.9,\n    },\n    closeButton: {},\n  }),\n  { name: 'MuiDropzoneSnackbar' },\n);\n\nfunction SnackbarContentWrapper({\n  className,\n  message,\n  onClose,\n  variant,\n  ...other\n}) {\n  const classes = useStyles();\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classes.icon} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nSnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default SnackbarContentWrapper;\n","import Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport Dropzone from 'react-dropzone';\n\nimport { convertBytesToMbsOrKbs, readFile } from '../helpers';\nimport useSnackbar from '../hooks/useSnackbar';\n\nimport PreviewList from './PreviewList';\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\n\nconst useStyles = makeStyles(\n  ({ spacing, palette, shape }) => ({\n    '@keyframes progress': {\n      '0%': {\n        backgroundPosition: '0 0',\n      },\n      '100%': {\n        backgroundPosition: '-70px 0',\n      },\n    },\n    root: {\n      display: 'flex',\n      position: 'relative',\n      width: '100%',\n      minHeight: '250px',\n      backgroundColor: palette.background.paper,\n      border: 'dashed',\n      borderColor: palette.divider,\n      borderRadius: shape.borderRadius,\n      boxSizing: 'border-box',\n      cursor: 'pointer',\n      overflow: 'hidden',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n    active: {\n      animation: '$progress 2s linear infinite !important',\n      backgroundImage: `repeating-linear-gradient(-45deg,\n            ${palette.background.paper},\n            ${palette.background.paper} 25px,\n            ${palette.divider} 25px,\n            ${palette.divider} 50px)`,\n      backgroundSize: '150% 100%',\n      border: 'solid',\n      borderColor: palette.primary.light,\n    },\n    invalid: {\n      backgroundImage: `repeating-linear-gradient(-45deg,\n            ${palette.error.light},\n            ${palette.error.light} 25px,\n            ${palette.error.dark} 25px,\n            ${palette.error.dark} 50px)`,\n      borderColor: palette.error.main,\n    },\n    textContainer: {\n      display: 'flex',\n    },\n    text: {\n      marginBottom: spacing(3),\n      marginTop: spacing(3),\n    },\n    icon: {\n      width: 51,\n      height: 51,\n      color: palette.text.primary,\n    },\n  }),\n  { name: 'MuiDropzoneArea' },\n);\n\nconst shouldShowAlert = (enabledAlerts, alertVariant) => {\n  if (!Array.isArray(enabledAlerts)) {\n    return true;\n  }\n  return enabledAlerts.includes(alertVariant);\n};\n\nconst defaultGetCols = (width, filesLimit) => {\n  const returnBelowLimit = (number) => {\n    if (number < filesLimit) {\n      return number;\n    }\n    return filesLimit;\n  };\n\n  switch (width) {\n    case 'xs':\n      return returnBelowLimit(1);\n    case 'sm':\n      return returnBelowLimit(2);\n    case 'md':\n      return returnBelowLimit(3);\n    case 'lg':\n      return returnBelowLimit(4);\n    case 'xl':\n      return returnBelowLimit(5);\n    default:\n      return returnBelowLimit(3);\n  }\n};\n\nconst defaultSnackbarAnchorOrigin = {\n  horizontal: 'left',\n  vertical: 'bottom',\n};\n\nconst defaultGetPreviewIcon = (fileObject, classes, isImage, titleBarTop) => {\n  if (isImage) {\n    return <img alt=\"\" className={classes.image} src={fileObject.data} />;\n  }\n\n  return (\n    <Grid container className={classes.iconWrapper} justify=\"center\">\n      <AttachFileIcon\n        className={clsx(classes.fileIcon, {\n          [classes.fileIconBottom]: titleBarTop,\n        })}\n      />\n    </Grid>\n  );\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nconst DropzoneAreaBase = ({\n  fileObjects,\n  filesLimit,\n  getFileAddedMessage,\n  getFileLimitExceedMessage,\n  getFileRemovedMessage,\n  getDropRejectMessage,\n  onAdd,\n  onAlert,\n  onDrop,\n  onDropRejected,\n  onDelete,\n  onPreviewClick,\n  acceptedFiles,\n  alertSnackbarProps,\n  disableRejectionFeedback,\n  dropzoneClass,\n  dropzoneParagraphClass,\n  dropzoneProps,\n  dropzoneText,\n  getCols,\n  getPreviewIcon,\n  Icon,\n  inputProps,\n  maxFileSize,\n  previewChipProps,\n  previewGridClasses,\n  previewGridProps,\n  previewText,\n  previewType,\n  showAlerts,\n  showFileNames,\n  useChipsForPreview,\n}) => {\n  const classes = useStyles();\n\n  const {\n    handleCloseSnackbar,\n    sendMessage,\n    snackbarMessage,\n    snackbarOpen,\n    snackbarVariant,\n  } = useSnackbar(onAlert);\n\n  const handleDropAccepted = useCallback(\n    async (droppedFiles, evt) => {\n      if (\n        filesLimit > 1 &&\n        fileObjects.length + droppedFiles.length > filesLimit\n      ) {\n        const message = getFileLimitExceedMessage(filesLimit);\n        sendMessage(message, 'error');\n        return;\n      }\n\n      // Notify Drop event\n      if (onDrop) {\n        onDrop(droppedFiles, evt);\n      }\n\n      // Retrieve fileObjects data\n      const fileObjs = await Promise.all(\n        droppedFiles.map(async (file) => {\n          const data = await readFile(file);\n          return {\n            file,\n            data,\n          };\n        }),\n      );\n\n      // Notify added files\n      if (onAdd) {\n        onAdd(fileObjs);\n      }\n\n      const successMessage = fileObjs.reduce(\n        (msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name),\n        '',\n      );\n      sendMessage(successMessage, 'success');\n    },\n    [\n      filesLimit,\n      fileObjects.length,\n      onDrop,\n      onAdd,\n      sendMessage,\n      getFileLimitExceedMessage,\n      getFileAddedMessage,\n    ],\n  );\n\n  const handleDropRejected = useCallback(\n    (rejectedFiles, evt) => {\n      let message = '';\n      rejectedFiles.forEach((rejectedFile) => {\n        message = getDropRejectMessage(\n          rejectedFile,\n          acceptedFiles,\n          maxFileSize,\n        );\n      });\n\n      if (onDropRejected) {\n        onDropRejected(rejectedFiles, evt);\n      }\n      sendMessage(message, 'error');\n    },\n    [\n      acceptedFiles,\n      getDropRejectMessage,\n      maxFileSize,\n      onDropRejected,\n      sendMessage,\n    ],\n  );\n\n  const handleRemove = useCallback(\n    (fileIndex) => (event) => {\n      event.stopPropagation();\n\n      // Find removed fileObject\n      const removedFileObj = fileObjects[fileIndex];\n\n      // Notify removed file\n      if (onDelete) {\n        onDelete(removedFileObj, fileIndex);\n      }\n      const message = getFileRemovedMessage(removedFileObj.file.name);\n      sendMessage(message, 'info');\n    },\n    [fileObjects, onDelete, getFileRemovedMessage, sendMessage],\n  );\n\n  const handlePreviewClick = useCallback(\n    (fileIndex) => (event) => {\n      event.stopPropagation();\n\n      // Find previewed fileObject\n      const previewedFileObj = fileObjects[fileIndex];\n\n      onPreviewClick(previewedFileObj, fileIndex);\n    },\n    [fileObjects, onPreviewClick],\n  );\n\n  const acceptFiles = acceptedFiles?.join(',');\n  const isMultiple = filesLimit > 1;\n  const someFiles = fileObjects.length > 0;\n\n  const alertsEnabled =\n    (typeof showAlerts === 'boolean' && showAlerts) ||\n    Array.isArray(showAlerts);\n  const isAlertOpen =\n    snackbarOpen && shouldShowAlert(showAlerts, snackbarVariant);\n\n  return (\n    <>\n      <Dropzone\n        {...dropzoneProps}\n        accept={acceptFiles}\n        onDropAccepted={handleDropAccepted}\n        onDropRejected={handleDropRejected}\n        maxSize={maxFileSize}\n        multiple={isMultiple}\n      >\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n          <div\n            {...getRootProps({\n              className: clsx(\n                classes.root,\n                dropzoneClass,\n                isDragActive && classes.active,\n                !disableRejectionFeedback && isDragReject && classes.invalid,\n              ),\n            })}\n          >\n            <input {...getInputProps(inputProps)} />\n\n            <Grid\n              container\n              className={classes.textContainer}\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography\n                variant=\"h5\"\n                component=\"p\"\n                className={clsx(classes.text, dropzoneParagraphClass)}\n              >\n                {dropzoneText}\n              </Typography>\n\n              {Icon ? (\n                <Icon className={classes.icon} />\n              ) : (\n                <CloudUploadIcon className={classes.icon} />\n              )}\n            </Grid>\n\n            {someFiles && previewType === 'inside' ? (\n              <PreviewList\n                fileObjects={fileObjects}\n                filesLimit={filesLimit}\n                getCols={getCols}\n                handleRemove={handleRemove}\n                getPreviewIcon={getPreviewIcon}\n                showFileNames={showFileNames}\n                useChipsForPreview={useChipsForPreview}\n                previewChipProps={previewChipProps}\n                previewGridClasses={previewGridClasses}\n                previewGridProps={previewGridProps}\n                previewType={previewType}\n                handlePreviewClick={handlePreviewClick}\n              />\n            ) : null}\n          </div>\n        )}\n      </Dropzone>\n\n      {someFiles && previewType === 'below' ? (\n        <>\n          <Typography variant=\"subtitle1\" component=\"span\">\n            {previewText}\n          </Typography>\n\n          <PreviewList\n            fileObjects={fileObjects}\n            filesLimit={filesLimit}\n            getCols={getCols}\n            handleRemove={handleRemove}\n            getPreviewIcon={getPreviewIcon}\n            showFileNames={showFileNames}\n            useChipsForPreview={useChipsForPreview}\n            previewChipProps={previewChipProps}\n            previewGridClasses={previewGridClasses}\n            previewGridProps={previewGridProps}\n            previewType={previewType}\n            handlePreviewClick={handlePreviewClick}\n          />\n        </>\n      ) : null}\n\n      {alertsEnabled ? (\n        <Snackbar\n          anchorOrigin={defaultSnackbarAnchorOrigin}\n          autoHideDuration={6000}\n          {...alertSnackbarProps}\n          open={isAlertOpen}\n          onClose={handleCloseSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={handleCloseSnackbar}\n            variant={snackbarVariant}\n            message={snackbarMessage}\n          />\n        </Snackbar>\n      ) : null}\n    </>\n  );\n};\n\nDropzoneAreaBase.defaultProps = {\n  acceptedFiles: [],\n  filesLimit: 3,\n  fileObjects: [],\n  maxFileSize: 3000000,\n  dropzoneText: 'Drag and drop a file here or click',\n  previewText: 'Preview:',\n  previewType: 'inside',\n  disableRejectionFeedback: false,\n  showFileNames: true,\n  useChipsForPreview: false,\n  previewChipProps: {},\n  previewGridClasses: {},\n  previewGridProps: {},\n  showAlerts: true,\n  alertSnackbarProps: {\n    anchorOrigin: {\n      horizontal: 'left',\n      vertical: 'bottom',\n    },\n    autoHideDuration: 6000,\n  },\n  getCols: defaultGetCols,\n  getFileLimitExceedMessage: (filesLimit) =>\n    `Maximum allowed number of files exceeded. Only ${filesLimit} allowed`,\n  getFileAddedMessage: (fileName) => `File ${fileName} successfully added.`,\n  getPreviewIcon: defaultGetPreviewIcon,\n  getFileRemovedMessage: (fileName) => `File ${fileName} removed.`,\n  getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n    let message = `File ${rejectedFile.name} was rejected. `;\n    if (!acceptedFiles.includes(rejectedFile.type)) {\n      message += 'File type not supported. ';\n    }\n    if (rejectedFile.size > maxFileSize) {\n      message += `File is too big. Size limit is ${convertBytesToMbsOrKbs(\n        maxFileSize,\n      )}. `;\n    }\n    return message;\n  },\n  onPreviewClick: () => {},\n};\n\nexport const FileObjectShape = PropTypes.shape({\n  file: PropTypes.object,\n  data: PropTypes.any,\n});\n\nDropzoneAreaBase.propTypes = {\n  /** A list of file types to accept.\n   * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n   */\n  acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n  /** Icon to be displayed inside the dropzone area. */\n  Icon: PropTypes.elementType,\n  /** Currently loaded files. */\n  fileObjects: PropTypes.arrayOf(FileObjectShape),\n  /** Maximum file size (in bytes) that the dropzone will accept. */\n  maxFileSize: PropTypes.number,\n  /** Text inside the dropzone. */\n  dropzoneText: PropTypes.string,\n  /** Custom CSS class name for dropzone container. */\n  dropzoneClass: PropTypes.string,\n  /** Custom CSS class name for text inside the container. */\n  dropzoneParagraphClass: PropTypes.string,\n  /** Disable feedback effect when dropping rejected files. */\n  disableRejectionFeedback: PropTypes.bool,\n  /** Shows file name under the dropzone image. */\n  showFileNames: PropTypes.bool,\n  /** Uses deletable Material-UI Chip components to display file names. */\n  useChipsForPreview: PropTypes.bool,\n  /**\n   * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n   *\n   * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n   */\n  previewChipProps: PropTypes.object,\n  /**\n   * Custom CSS classNames for preview Grid components.<br/>\n   * Should be in the form {container: string, item: string, image: string}.\n   */\n  previewGridClasses: PropTypes.object,\n  /**\n   * Props to pass to the Material-UI Grid components.<br/>\n   * Should be in the form {container: GridProps, item: GridProps}.\n   *\n   * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n   */\n  previewGridProps: PropTypes.object,\n  /** The label for the file preview section. */\n  previewText: PropTypes.string,\n  /** Determines whether previews are shown inside the dropzone area, below, or not at all. Acceptable values are 'inside', 'below', 'none'. */\n  previewType: PropTypes.oneOf(['inside', 'below', 'none']),\n  /**\n   * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n   *\n   * - can be a boolean (\"global\" `true` or `false` for all alerts).\n   * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n   *  - showAlerts={['error']} for only errors.\n   *  - showAlerts={['error', 'info']} for both errors and info.\n   *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n   *  - showAlerts={[]} is same as showAlerts={false}.\n   */\n  showAlerts: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\n  ]),\n  /**\n   * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n   *\n   * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n   */\n  alertSnackbarProps: PropTypes.object,\n  /**\n   * Props to pass to the Dropzone component.\n   *\n   * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n   */\n  dropzoneProps: PropTypes.object,\n  /**\n   * Attributes applied to the input element.\n   *\n   * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * A function which determines which the number of columns to display in the preview list\n   *\n   * *Default*: Returns a sensible number of columns depending on the screen size (i.e. xs=1, sm=2, md=3, lg=4, xl=5) without exceeding the filesLimit (e.g. There would be no point displaying 4 columns if the filesLimit is 3)\n   *\n   * @param {string} width Width prop from useWidth, this will be one of ['xs','sm','md','lg','xl'] depending on the current screen size\n   * @param {number} filesLimit The `filesLimit` prop\n   * @param {number} currentNumberOfFiles The number of files in the `state.fileObjects`\n   */\n  getCols: PropTypes.func,\n  /**\n   * Get alert message to display when files limit is exceed.\n   *\n   * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n   *\n   * @param {number} filesLimit The `filesLimit` currently set for the component.\n   */\n  getFileLimitExceedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a new file is added.\n   *\n   * *Default*: \"File ${fileName} successfully added.\"\n   *\n   * @param {string} fileName The newly added file name.\n   */\n  getFileAddedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is removed.\n   *\n   * *Default*: \"File ${fileName} removed.\"\n   *\n   * @param {string} fileName The name of the removed file.\n   */\n  getFileRemovedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is rejected onDrop.\n   *\n   * *Default*: \"File ${rejectedFile.name} was rejected.\"\n   *\n   * @param {Object} rejectedFile The file that got rejected\n   * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n   * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n   */\n  getDropRejectMessage: PropTypes.func,\n  /**\n   * A function which determines which icon to display for a file preview.\n   *\n   * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n   *\n   * @param {FileObject} objectFile The file which the preview will belong to\n   * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n   */\n  getPreviewIcon: PropTypes.func,\n  /**\n   * Fired when new files are added to dropzone.\n   *\n   * @param {FileObject[]} newFiles The new files added to the dropzone.\n   */\n  onAdd: PropTypes.func,\n  /**\n   * Fired when an alert is triggered.\n   *\n   * @param {string} message Alert message.\n   * @param {string} variant One of \"error\", \"info\", \"success\".\n   */\n  onAlert: PropTypes.func,\n  /**\n   * Fired when a file is deleted from the previews panel.\n   *\n   * @param {FileObject} deletedFileObject The file that was removed.\n   * @param {number} index The index of the removed file object.\n   */\n  onDelete: PropTypes.func,\n  /**\n   * Fired when the user drops files into the dropzone.\n   *\n   * @param {File[]} droppedFiles All the files dropped into the dropzone.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDrop: PropTypes.func,\n  /**\n   * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n   *\n   * @param {File[]} rejectedFiles All the rejected files.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDropRejected: PropTypes.func,\n  /**\n   * Fired when the user click que preview icon in the image. If this props was not informed, the preview icon doesn't appears.\n   *\n   * @param {File} clickedFile File was clicked.\n   * @param {number} index The index of clicked file object.\n   */\n  onPreviewClick: PropTypes.func,\n};\n\nexport default DropzoneAreaBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport useFiles from '../hooks/useFiles';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\n\nconst DropzoneArea = ({\n  clearOnUnmount,\n  initialFiles,\n  onChange,\n  onDelete,\n  filesLimit,\n  ...dropzoneAreaBaseProps\n}) => {\n  const { handleDeleteFile, handleAddFiles, fileObjects } = useFiles({\n    onChange,\n    clearOnUnmount,\n    initialFiles,\n    filesLimit,\n    onDelete,\n  });\n\n  return (\n    <DropzoneAreaBase\n      {...dropzoneAreaBaseProps}\n      fileObjects={fileObjects}\n      onAdd={handleAddFiles}\n      onDelete={handleDeleteFile}\n    />\n  );\n};\n\nDropzoneArea.defaultProps = {\n  clearOnUnmount: true,\n  filesLimit: 3,\n  initialFiles: [],\n};\n\nDropzoneArea.propTypes = {\n  ...DropzoneAreaBase.propTypes,\n  /** Clear uploaded files when component is unmounted. */\n  clearOnUnmount: PropTypes.bool,\n  /** List containing File objects or URL strings.<br/>\n   * **Note:** Please take care of CORS.\n   */\n  initialFiles: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  ),\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n  /**\n   * Fired when the files inside dropzone change.\n   *\n   * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Fired when a file is deleted from the previews panel.\n   *\n   * @param {File} deletedFile The file that was removed.\n   */\n  onDelete: PropTypes.func,\n};\n\nexport default DropzoneArea;\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\nconst DropzoneDialogBase = ({\n  cancelButtonText,\n  dialogProps,\n  dialogTitle,\n  fullWidth,\n  maxWidth,\n  onClose,\n  onSave,\n  open,\n  submitButtonText,\n  ...dropzoneAreaProps\n}) => {\n  // Submit button state\n  const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n\n  return (\n    <Dialog\n      cancelButtonText={cancelButtonText}\n      dialogProps={dialogProps}\n      dialogTitle={dialogTitle}\n      maxWidth={maxWidth}\n      onClose={onClose}\n      onSave={onSave}\n      open={open}\n      fullWidth={fullWidth}\n      fileObjects={dropzoneAreaProps.fileObjects}\n    >\n      <DialogTitle>{dialogTitle}</DialogTitle>\n\n      <DialogContent>\n        <DropzoneAreaBase {...dropzoneAreaProps} />\n      </DialogContent>\n\n      <DialogActions>\n        <Button color=\"primary\" onClick={onClose}>\n          {cancelButtonText}\n        </Button>\n\n        <Button color=\"primary\" disabled={submitDisabled} onClick={onSave}>\n          {submitButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDropzoneDialogBase.defaultProps = {\n  open: false,\n  dialogTitle: 'Upload file',\n  dialogProps: {},\n  fullWidth: true,\n  maxWidth: 'sm',\n  cancelButtonText: 'Cancel',\n  submitButtonText: 'Submit',\n  showPreviews: true,\n  showPreviewsInDropzone: false,\n  showFileNamesInPreview: true,\n};\n\nDropzoneDialogBase.propTypes = {\n  ...DropzoneAreaBase.propTypes,\n  /** Sets whether the dialog is open or closed. */\n  open: PropTypes.bool,\n  /** The Dialog title. */\n  dialogTitle: PropTypes.string,\n  /**\n   * Props to pass to the Material-UI Dialog components.\n   * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n   */\n  dialogProps: PropTypes.object,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.<br/>\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.string,\n  /** Cancel button text in dialog. */\n  cancelButtonText: PropTypes.string,\n  /** Submit button text in dialog. */\n  submitButtonText: PropTypes.string,\n  /**\n   * Fired when the modal is closed.\n   *\n   * @param {SyntheticEvent} event The react `SyntheticEvent`\n   */\n  onClose: PropTypes.func,\n  /**\n   * Fired when the user clicks the Submit button.\n   *\n   * @param {SyntheticEvent} event The react `SyntheticEvent`\n   */\n  onSave: PropTypes.func,\n  /**\n   * Shows previews **BELOW** the dropzone.<br/>\n   * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n   */\n  showPreviews: PropTypes.bool,\n  /** Shows preview **INSIDE** the dropzone area. */\n  showPreviewsInDropzone: PropTypes.bool,\n  /** Shows file name under the image. */\n  showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialogBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport useFiles from '../hooks/useFiles';\n\nimport DropzoneDialogBase from './DropzoneDialogBase';\n\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\nconst DropzoneDialog = ({\n  clearOnUnmount,\n  onClose,\n  onSave,\n  initialFiles,\n  filesLimit,\n  onDelete,\n  onChange,\n  ...other\n}) => {\n  const {\n    handleDeleteFile,\n    handleAddFiles,\n    fileObjects,\n    handleResetFiles,\n  } = useFiles({\n    onChange,\n    clearOnUnmount,\n    initialFiles,\n    filesLimit,\n    onDelete,\n  });\n\n  const handleClose = (evt) => {\n    if (onClose) {\n      onClose(evt);\n    }\n  };\n\n  const handleSave = (evt) => {\n    if (onSave) {\n      onSave(\n        fileObjects.map((fileObject) => fileObject.file),\n        evt,\n      );\n    }\n\n    if (clearOnUnmount) {\n      handleResetFiles();\n    }\n  };\n\n  return (\n    <DropzoneDialogBase\n      clearOnUnmount={clearOnUnmount}\n      initialFiles={initialFiles}\n      filesLimit={filesLimit}\n      onChange={onChange}\n      fileObjects={fileObjects}\n      onAdd={handleAddFiles}\n      onDelete={handleDeleteFile}\n      onClose={handleClose}\n      onSave={handleSave}\n      {...other}\n    />\n  );\n};\n\nDropzoneDialog.defaultProps = {\n  clearOnUnmount: true,\n  filesLimit: 3,\n  initialFiles: [],\n};\n\nDropzoneDialog.propTypes = {\n  ...DropzoneDialogBase.propTypes,\n  /** Clear uploaded files when component is unmounted. */\n  clearOnUnmount: PropTypes.bool,\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n  /** List containing File objects or URL strings.<br/>\n   * **Note:** Please take care of CORS.\n   */\n  initialFiles: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  ),\n  /**\n   * Fired when the user clicks the Submit button.\n   *\n   * @param {File[]} files All the files currently inside the Dropzone.\n   * @param {SyntheticEvent} event The react `SyntheticEvent`.\n   */\n  onSave: PropTypes.func,\n};\n\nexport default DropzoneDialog;\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","useFiles","onChange","clearOnUnmount","initialFiles","filesLimit","onDelete","useState","fileObjects","setFileObjects","loadInitialFiles","useCallback","all","map","initialFile","fileObjs","prev","console","log","handleAddFiles","newFileObjects","handleDeleteFile","removedFileObj","removedFileObjIdx","remainingFileObjs","filter","fileObject","i","handleResetFiles","useEffect","useSnackbar","onAlert","open","message","variant","state","setState","sendMessage","handleCloseSnackbar","snackbarMessage","snackbarVariant","snackbarOpen","useWidth","theme","useTheme","keys","_toConsumableArray","breakpoints","reverse","reduce","output","key","matches","matchMediaQuery","up","useColumns","getCols","numberOfFileObjects","numberOfColumns","setCols","width","cols","useStyles","makeStyles","spacing","root","alignItems","position","height","margin","backgroundColor","icon","color","iconWrapper","fileIcon","flexGrow","marginTop","fileIconBottom","name","React.createElement","DeleteIcon","PreviewList","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","previewType","getPreviewIcon","handlePreviewClick","classes","length","previewInside","Chip","GridList","clsx","container","gridList","fileTitle","isImageCheck","GridListTile","gridListTile","gridListTitle","gridListTitleBar","titlePosition","GridListTileBar","IconButton","removeIconButton","propTypes","PropTypes","arrayOf","object","isRequired","number","func","string","bool","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","palette","main","display","marginRight","fontSize","opacity","closeButton","SnackbarContentWrapper","className","onClose","other","Icon","SnackbarContent","CloseIcon","node","oneOf","shape","backgroundPosition","minHeight","background","paper","border","borderColor","divider","borderRadius","boxSizing","cursor","overflow","flexDirection","justifyContent","active","animation","backgroundImage","backgroundSize","primary","light","invalid","dark","textContainer","text","marginBottom","shouldShowAlert","enabledAlerts","alertVariant","Array","isArray","includes","defaultGetCols","returnBelowLimit","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","titleBarTop","image","Grid","AttachFileIcon","DropzoneAreaBase","getFileAddedMessage","getFileLimitExceedMessage","getFileRemovedMessage","getDropRejectMessage","onAdd","onDrop","onDropRejected","onPreviewClick","acceptedFiles","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","maxFileSize","previewText","showAlerts","handleDropAccepted","droppedFiles","evt","successMessage","msg","fileObj","handleDropRejected","rejectedFiles","forEach","rejectedFile","fileIndex","stopPropagation","previewedFileObj","acceptFiles","join","isMultiple","someFiles","alertsEnabled","isAlertOpen","Dropzone","getRootProps","getInputProps","isDragActive","isDragReject","Typography","CloudUploadIcon","Snackbar","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","elementType","oneOfType","DropzoneArea","dropzoneAreaBaseProps","DropzoneDialogBase","cancelButtonText","dialogProps","dialogTitle","fullWidth","maxWidth","onSave","submitButtonText","dropzoneAreaProps","submitDisabled","Dialog","DialogTitle","DialogContent","DialogActions","Button","showPreviews","showPreviewsInDropzone","showFileNamesInPreview","DropzoneDialog","handleClose","handleSave"],"mappings":"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"}